{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a610c054",
   "metadata": {},
   "source": [
    "## Importing relevant libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a68392e2",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\abc\\AppData\\Local\\Temp\\ipykernel_15088\\3355370929.py:28: DeprecationWarning: The qiskit.ignis package is deprecated and has been supersceded by the qiskit-experiments project. Refer to the migration guide: https://github.com/Qiskit/qiskit-ignis#migration-guide on how to migrate to the new project.\n",
      "  from qiskit.ignis.mitigation.measurement import CompleteMeasFitter, complete_meas_cal\n",
      "C:\\Users\\abc\\anaconda3\\lib\\site-packages\\openfermion\\hamiltonians\\hartree_fock.py:11: DeprecationWarning: Please use `OptimizeResult` from the `scipy.optimize` namespace, the `scipy.optimize.optimize` namespace is deprecated.\n",
      "  from scipy.optimize.optimize import OptimizeResult\n",
      "C:\\Users\\abc\\anaconda3\\lib\\site-packages\\paddle\\tensor\\creation.py:125: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. \n",
      "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
      "  if data.dtype == np.object:\n",
      "C:\\Users\\abc\\anaconda3\\lib\\site-packages\\paddle\\tensor\\creation.py:125: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. \n",
      "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
      "  if data.dtype == np.object:\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import scipy.linalg as la\n",
    "import scipy.spatial as spat\n",
    "from scipy.stats import unitary_group\n",
    "from scipy.stats import moment\n",
    "from scipy.stats import skew, kurtosis\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.linalg import norm\n",
    "import matplotlib.pyplot as plt\n",
    "import math\n",
    "import itertools\n",
    "from collections import Counter\n",
    "import matplotlib.pyplot as plt\n",
    "from qiskit import *\n",
    "from qiskit import execute\n",
    "from qiskit import transpiler\n",
    "from qiskit.circuit.add_control import add_control\n",
    "from qiskit.extensions import UnitaryGate\n",
    "from qiskit.circuit.reset import Reset\n",
    "from qiskit_ibm_provider import IBMProvider\n",
    "from qiskit.circuit.library.standard_gates import IGate, UGate, U3Gate\n",
    "from qiskit.dagcircuit import DAGOpNode, DAGInNode\n",
    "from qiskit.quantum_info.operators.predicates import matrix_equal\n",
    "from qiskit.quantum_info.synthesis import OneQubitEulerDecomposer\n",
    "from qiskit.transpiler.passes.optimization import Optimize1qGates\n",
    "from qiskit.transpiler.basepasses import TransformationPass\n",
    "from qiskit.transpiler.exceptions import TranspilerError\n",
    "from qiskit.ignis.mitigation.measurement import CompleteMeasFitter, complete_meas_cal\n",
    "from math import fsum\n",
    "from scipy.optimize import minimize\n",
    "from qiskit.transpiler import PassManager, InstructionDurations\n",
    "from qiskit.converters import circuit_to_dag, dag_to_circuit\n",
    "from qiskit.dagcircuit import DAGCircuit\n",
    "from qiskit.providers.models import BackendConfiguration\n",
    "from qiskit_aer import AerSimulator\n",
    "from qiskit_aer.noise import NoiseModel\n",
    "from qiskit.transpiler.passes import BasisTranslator\n",
    "from qiskit import QuantumCircuit, IBMQ, transpile\n",
    "from qiskit.circuit import Delay\n",
    "from qiskit.circuit.library import XGate, YGate, ZGate, RXGate, RYGate, RZGate\n",
    "from qiskit.transpiler.passes import ALAPSchedule\n",
    "from qiskit.circuit.equivalence_library import SessionEquivalenceLibrary\n",
    "from qiskit.visualization import plot_histogram\n",
    "from qiskit.visualization import timeline_drawer\n",
    "from qiskit.providers.fake_provider import FakeMontreal\n",
    "from qiskit.providers.fake_provider import FakeJakarta\n",
    "from qiskit.providers.fake_provider import FakeMumbai\n",
    "from qiskit.providers.fake_provider import FakeHanoi\n",
    "from qiskit.providers.fake_provider import FakeLagos\n",
    "from qiskit.providers.fake_provider import FakeMelbourne\n",
    "from qiskit.providers.fake_provider import FakeGuadalupe\n",
    "from qiskit.providers.fake_provider import FakeNairobi\n",
    "from qiskit.providers.fake_provider import FakeToronto\n",
    "from qiskit.providers.fake_provider import FakeWashington\n",
    "from qiskit.providers.ibmq.managed import IBMQJobManager\n",
    "from qiskit.providers.aer import AerSimulator\n",
    "\n",
    "# Import Paddle libraries\n",
    "import paddle\n",
    "from paddle_quantum.ansatz import Circuit\n",
    "from paddle_quantum.linalg import dagger"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9f44744",
   "metadata": {},
   "source": [
    "## Constructing the FPE operator and implementing helper functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d750d713",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Classical implementation\n",
    "\"\"\"\n",
    "Purpose: \n",
    "    Find the analytical solution given the input parameters\n",
    "Input: \n",
    "    x: array representing the x coordinates over which the solution is to be found\n",
    "    a, Γ: parameters for the Ornstein-Uhlenbeck equation\n",
    "Output:\n",
    "    y: array of the value of the analytical solution over x\n",
    "\"\"\"\n",
    "\n",
    "def OrnsteinUhlenbeck(x, a = 1, gamma = 1):\n",
    "    y = np.sqrt(a/(2*np.pi*gamma)) * np.exp((-a * x ** 2)/(2*gamma))\n",
    "    \n",
    "    return y\n",
    "\n",
    "\"\"\"\n",
    "Purpose:\n",
    "    Calculate the weighted Hermite polynomials using recursive relations up to H_n\n",
    "Input:\n",
    "    n: the highest number of Hermite polynomials to be evaluated at\n",
    "    x: the value of x at which the weighted Hermite polynomials are to be evaluated\n",
    "Output:\n",
    "    Hermite: the value of the weighted Hermite polynomials\n",
    "Example: HermiteSeries(2, 4) -> [H_0(4), H_1(4), H_2(4)]\n",
    "\"\"\"\n",
    "\n",
    "def HermiteSeries(n, x):\n",
    "    Hermite = np.zeros((1, n+1))\n",
    "    Hermite[0][0] = 1.0 * np.exp(-x**2/2)\n",
    "    Hermite[0][1] = 2.0 * x *np.exp(-x**2/2)\n",
    "    \n",
    "    for ni in range(1, n):\n",
    "        Hermite[0][ni+1] = 2*x*Hermite[0][ni] - 2*ni*Hermite[0][ni-1]\n",
    "    \n",
    "    return Hermite\n",
    "\n",
    "\"\"\"\n",
    "Purpose:\n",
    "    Reconstruct the functions represented by the coefficients of weighted Hermite polynomials in spatial coordinates\n",
    "Input:\n",
    "    x: array containing the x values over which the function is to be evaluated\n",
    "    coefficients: the coefficients corresponding to the Hermite polynomials (should be zero-mode of the operator)\n",
    "    nmax: the highest order of weighted Hermite polynomials used\n",
    "    s: the scaling factor\n",
    "Output:\n",
    "    y: the reconstruction\n",
    "\"\"\"\n",
    "\n",
    "def project(x, coefficients, nmax, s):\n",
    "    \n",
    "    y = np.zeros(x.shape)\n",
    "    \n",
    "    for i in (range(len(x))):\n",
    "        x0 = s*x[i]\n",
    "        hermite_values = HermiteSeries(nmax, x0)\n",
    "        y[i] += np.dot(hermite_values, coefficients)\n",
    "        \n",
    "    return (x, y)\n",
    "\n",
    "\"\"\"\n",
    "Purpose:\n",
    "    Normalize the PDF so that the area under the curve is 1\n",
    "Input:\n",
    "    x, y: arrays representing the unnormalized\n",
    "Output:\n",
    "    (x, y): normalized PDF\n",
    "\"\"\"\n",
    "\n",
    "def normalize(x, y):\n",
    "    dx = x[1] - x[0]\n",
    "    sum = 0\n",
    "    \n",
    "    for i in range(len(x)):\n",
    "        sum = sum + (y[i] * dx)\n",
    "    \n",
    "    y = y/sum\n",
    "    \n",
    "    return (x, y)\n",
    "\n",
    "\"\"\"\n",
    "Purpose:\n",
    "    Calculate the RMS\n",
    "Input:\n",
    "    y_op, y: the y values generated by the operator and the analytical solution\n",
    "Output:\n",
    "    RMS\n",
    "\"\"\"\n",
    "\n",
    "def rms_diff(y_op, y):\n",
    "    return np.sqrt(np.sum((y_op-y)**2)/len(y))\n",
    "\n",
    "\"\"\"\n",
    "Purpose:\n",
    "    Find s given a and Γ such that the projection in Hermite space is just H_0\n",
    "Input:\n",
    "    a, Γ: parameters for Ornstein-Uhlenbeck\n",
    "Output:\n",
    "    s\n",
    "\"\"\"\n",
    "\n",
    "def special_s(a, gamma):\n",
    "    return np.sqrt(a/gamma)\n",
    "\n",
    "def euler_representation(z):\n",
    "    A = abs(z)\n",
    "    phase = math.atan(z.imag/z.real)\n",
    "    \n",
    "    return A, phase\n",
    "\n",
    "def generate_positive_semidefinite_matrix(eigenvalues):\n",
    "    ## Function to transform the FPE operator to the Hermite basis and return a finite truncated matrix for the ...\n",
    "    ## ... FPE operator\n",
    "    \n",
    "    n = len(eigenvalues)\n",
    "    s = np.diag(eigenvalues)\n",
    "    q, _ = la.qr(np.random.rand(n, n))\n",
    "    semidef = np.dot(np.transpose(q), s)\n",
    "    semidef = np.dot(semidef, q)\n",
    "    \n",
    "    return semidef\n",
    "\n",
    "def normalize_probability(y, dx):\n",
    "    ## Function to return a normalized PDF \n",
    "    \n",
    "    total = np.sum(y) * dx\n",
    "    y = y / total\n",
    "    \n",
    "    return y\n",
    "\n",
    "def perturbed_ornstein_uhlenbeck(x0, a = 1, gamma = 1, c = 0, shift = 0):\n",
    "    ## Function to compute the exact solution to the perturbed Ornstein-Uhlenbeck equation\n",
    "    \n",
    "    assert len(x0) > 1, \"Error: x0 should be a vector\"\n",
    "\n",
    "    x = x0 - shift\n",
    "    y = np.exp(-a*x**2 /(2*gamma) - c*x**4 /(4*gamma))\n",
    "    dx = x[2] - x[1]\n",
    "    \n",
    "    y = normalize_probability(y, dx)\n",
    "    \n",
    "    return y\n",
    "\n",
    "def special_L(a, gamma):\n",
    "    ## Function to compute the characteristic length scale\n",
    "    \n",
    "    return np.sqrt(a/gamma)\n",
    "\n",
    "def delta(N, n):\n",
    "    ## Function to implement the Kronecker delta function\n",
    "    \n",
    "    if N == n:\n",
    "        return 1\n",
    "    else:\n",
    "        return 0\n",
    "\n",
    "def f(N,n):\n",
    "    return 0.5*( np.sqrt(n*(n-1))*delta(N,n-2) + delta(N,n) - np.sqrt((n+1)*(n+2))*delta(N,n+2))\n",
    "\n",
    "def g(N,n, L):\n",
    "    return 0.5*L**2*( np.sqrt(n*(n-1))*delta(N,n-2) - (2*n+1)*delta(N,n) + np.sqrt((n+1)*(n+2))*delta(N,n+2))\n",
    "\n",
    "def t(N, n, L):\n",
    "    val1 = np.sqrt(n*(n-1)*(n-2)*(n-3))*delta(N, n-4)\n",
    "    val2 = (2*n+2)*np.sqrt(n*(n-1))*delta(N, n-2)\n",
    "    val3 = (6*n+3)*delta(N, n)\n",
    "    val4 = -2*n*np.sqrt((n+1)*(n+2))*delta(N, n+2)\n",
    "    val5 = -1*np.sqrt((n+1)*(n+2)*(n+3)*(n+4))*delta(N, n+4)\n",
    "\n",
    "    return 1/(4*L**2)*( val1 + val2 + val3 + val4 + val5 )\n",
    "\n",
    "def element_perturbed(N, n, L, a, c, gamma):\n",
    "    ## Function to compute the matrix elements of the finite truncated matrix for the FPE operator (in the Hermite basis)\n",
    "    \n",
    "    return -(a*f(N,n) + c*t(N, n, L) + gamma*g(N, n, L))\n",
    "\n",
    "def create_operator_perturbed(nmax, L, a, c, gamma):\n",
    "    ## Function to generate the FPE operator matrix in the Hermite basis\n",
    "    op = np.zeros((nmax+1, nmax+1))\n",
    "    \n",
    "    for N in range(nmax+1):\n",
    "        row = N\n",
    "        for n in range(nmax+1):\n",
    "            col = n\n",
    "            op[row, col] = element_perturbed(N, n, L, a, c, gamma)\n",
    "    \n",
    "    \"\"\"\n",
    "    if np.any(np.nan, op):\n",
    "        print(\"There's an nan in the operator\")\n",
    "    elif np.any(np.inf, op):\n",
    "        print(\"There is an inf in the operator\")\n",
    "    \"\"\"\n",
    "\n",
    "    return op\n",
    "\n",
    "def state_n(nmax, x0, L):\n",
    "    ## Function to compute the Hermite polynomials upto the order specified by nmax\n",
    "    \n",
    "    assert L > 0, \"Error (state_n): input L must be greater than or equal to 0\"\n",
    "\n",
    "    states = np.zeros(nmax + 1)\n",
    "    x = x0*L\n",
    "\n",
    "    states[0] = np.sqrt(L*np.sqrt(1/np.pi))* 1.0 * np.exp(-x**2/2)\n",
    "\n",
    "    if nmax > 0:\n",
    "        states[1] = np.sqrt(L*np.sqrt(1/np.pi))* (1/np.sqrt(2)) * 2.0 * x * np.exp(-(x**2)/2)\n",
    "    \n",
    "    for ni in range(2, nmax + 1):\n",
    "        states[ni] = ((np.sqrt(2)*x) / np.sqrt(ni))*states[ni-1] - (ni-1)/np.sqrt((ni)*(ni-1))*states[ni-2]\n",
    "\n",
    "    return states\n",
    "\n",
    "def integrate_eigenvector(x0, y, nmax, L):\n",
    "    ## Function to compute the coefficients corresponding to the calculated Hermite polynomials by numerical integration\n",
    "    ## Note: here, we use the left-hand integration method\n",
    "    \n",
    "    dx = x0[2] - x0[1]\n",
    "    eigenvector = np.zeros(nmax + 1)\n",
    "\n",
    "    for i in range(len(x)):\n",
    "\n",
    "        states = state_n(nmax, x0[i], L)\n",
    "        states = states * y[i] * dx\n",
    "\n",
    "        eigenvector = eigenvector + states\n",
    "        \n",
    "    return {\"eigenvector\" : eigenvector, \"dx\" : dx, \"nmax\" : nmax, \"x0\" : x0, \"L\" : L}\n",
    "\n",
    "def make_operator_even(op):\n",
    "    op_new = np.zeros((op.shape[0]//2, op.shape[1]//2))\n",
    "    \n",
    "    for row in range(op_new.shape[0]):\n",
    "        for col in range(op_new.shape[1]):\n",
    "            op_new[row, col] = op[row*2, col * 2]\n",
    "    \n",
    "    return op_new\n",
    "\n",
    "def reconstruct_eigenvector(cache, normalize = True, only_even = False):\n",
    "    ## Function to reconstruct the PDF using the cache obtained previously\n",
    "    \n",
    "    eigenvector = cache[\"eigenvector\"]\n",
    "    nmax = cache[\"nmax\"]\n",
    "    x0 = cache[\"x0\"]\n",
    "    dx = cache[\"dx\"]\n",
    "    L = cache[\"L\"]\n",
    "    \n",
    "    if not only_even:\n",
    "        eigenvector = cache[\"eigenvector\"]\n",
    "    else:\n",
    "        eigenvector_old = cache[\"eigenvector\"]\n",
    "        eigenvector = np.zeros(nmax + 1)\n",
    "        \n",
    "        for i in range(len(eigenvector_old)):\n",
    "            eigenvector[2*i] = eigenvector_old[i]\n",
    "\n",
    "    y = np.zeros(len(x0))\n",
    "\n",
    "    for i in range(len(x0)):\n",
    "        states = state_n(nmax, x0[i], L)\n",
    "        y[i] += (np.dot(states, eigenvector))\n",
    "    if normalize:   \n",
    "        y = normalize_probability(y, dx)\n",
    "        \n",
    "    return (x0, y)\n",
    "\n",
    "def find_zeromode(op_nonhermitian, nmax, x0, dx, L, which = \"single\", only_even = False):\n",
    "    ## Function to compute the zeromode, its position, and the eigenvalue corresponding to the zeromode\n",
    "    \n",
    "    assert which == \"nonhermitian\" or which == \"single\", \"Error: currently only supports which = {\\\"nonhermitian\\\", \\\"single\\\"}\"\n",
    "    \n",
    "    if only_even:\n",
    "        op_processed = make_operator_even(op_nonhermitian)\n",
    "    else:\n",
    "        op_processed = op_nonhermitian\n",
    "        \n",
    "    if which == \"nonhermitian\":\n",
    "        op = op_processed\n",
    "    elif which == \"single\":\n",
    "        op = np.dot(np.transpose(op_processed), op_processed)\n",
    "\n",
    "    eigenvalues, eigenvectors = la.eig(op)\n",
    "\n",
    "    index = np.argmin(np.real(eigenvalues)**2)\n",
    "\n",
    "    min_eigenval = eigenvalues[index]\n",
    "    \n",
    "    zeromode = eigenvectors[:, index]\n",
    "\n",
    "    return {\"operator\" : op, \"which\" : which, \\\n",
    "            \"eigenvector\" : np.real(zeromode), \"index\" : index, \"eigenvalue\" : np.real(min_eigenval), \\\n",
    "            \"nmax\" : nmax, \"x0\" : x0, \"dx\" : dx, \"L\" : L, \"spectrum\" : eigenvalues, \"P\" : eigenvectors}\n",
    "\n",
    "def rms_diff(y0, y, sigdigits = 0):\n",
    "    ## Function to compute the RMS difference between the analytically computed PDF and the one ...\n",
    "    ## ... obtained using the FPE operator\n",
    "    \n",
    "    assert len(y0) == len(y), \"Error: the length of y0 and y should be the same\"\n",
    "    diff = np.sum((y0-y)**2)/len(y0)\n",
    "    \n",
    "    return np.sqrt(diff)\n",
    "\n",
    "def analyze_collapse(initial_state, P, index):\n",
    "    num_basis = P.shape[1]\n",
    "    coefficients = np.zeros((num_basis, ))\n",
    "\n",
    "    for i in range(num_basis):\n",
    "        basis = P[:, i]\n",
    "        basis = normalize_eigenvector(basis)\n",
    "\n",
    "        coefficients[i] = np.dot(basis, initial_state)\n",
    "\n",
    "    normalized_coefficients = normalize_eigenvector(coefficients)\n",
    "\n",
    "    reconstruction = np.zeros((P.shape[0], ))\n",
    "\n",
    "    for i in range(num_basis):\n",
    "        basis = P[:, i]\n",
    "        basis = normalize_eigenvector(basis)\n",
    "\n",
    "        added_vector = coefficients[i] * basis\n",
    "        reconstruction = reconstruction + added_vector\n",
    "\n",
    "    probability = normalized_coefficients ** 2\n",
    "    \n",
    "    probability_zeromode = probability[index]\n",
    "    assert np.sum(probability) - 1 < 0.00001, \"Error: unity normalization of probability is not observed\"\n",
    "\n",
    "    print(\"The initial_state is: \")\n",
    "    print(initial_state)\n",
    "    print()\n",
    "\n",
    "    print(\"The coefficient expansion is: \")\n",
    "    print(coefficients)\n",
    "    print()\n",
    "\n",
    "    print(\"The normalized coefficient expansion is: \")\n",
    "    print(normalized_coefficients)\n",
    "    print()\n",
    "\n",
    "    print(\"The reconstructed vector is: \")\n",
    "    print(reconstruction)\n",
    "    print()\n",
    "\n",
    "    print(\"The probability of collapsing into each eigenvector is: \")\n",
    "    print(probability)\n",
    "    print()\n",
    "\n",
    "    print(\"The probability of collapsing into the zeromode is: \")\n",
    "    print(probability_zeromode)\n",
    "    print()\n",
    "    \n",
    "    return probability_zeromode, probability"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f05c25a",
   "metadata": {},
   "source": [
    "## Saving IBMQ account"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0e64d84d",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\abc\\AppData\\Local\\Temp\\ipykernel_15088\\2708008332.py:1: DeprecationWarning: The qiskit.IBMQ entrypoint and the qiskit-ibmq-provider package (accessible from 'qiskit.providers.ibmq`) are deprecated and will be removed in a future release. Instead you should use the qiskit-ibm-provider package which is accessible from 'qiskit_ibm_provider'. You can install it with 'pip install qiskit_ibm_provider'. Just replace 'qiskit.IBMQ' with 'qiskit_ibm_provider.IBMProvider'\n",
      "  IBMQ.save_account('20679dd22551941f9255655deabc9d69d569091c01ec92bdb01c2999ac7c55e771b66be79444a46d21a51f3a6894c01f6485b9692ef9d620849186b8e67964cf')\n",
      "configrc.store_credentials:WARNING:2024-04-17 19:26:13,183: Credentials already present. Set overwrite=True to overwrite.\n"
     ]
    }
   ],
   "source": [
    "IBMQ.save_account('20679dd22551941f9255655deabc9d69d569091c01ec92bdb01c2999ac7c55e771b66be79444a46d21a51f3a6894c01f6485b9692ef9d620849186b8e67964cf')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6779bfbd",
   "metadata": {},
   "source": [
    "## Loading IBMQ account"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a2647183",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "__init__.discover_credentials:INFO:2024-04-17 19:26:13,220: Using credentials from qiskitrc\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AccountProvider for IBMQ(hub='ibm-q', group='open', project='main')>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IBMQ.load_account()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3489de4e",
   "metadata": {},
   "source": [
    "## Importing IBMQ provider"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b19f0136",
   "metadata": {},
   "outputs": [],
   "source": [
    "provider = IBMQ.get_provider('ibm-q')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6963ed9b",
   "metadata": {},
   "source": [
    "## Printing available backends"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "819d6db1",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO 2024-04-17 19:26:15,925 assembler.py:38] Total Assembly Time - 0.01121 (ms)\n",
      "INFO 2024-04-17 19:26:15,926 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,926 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,926 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,934 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,936 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,939 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,941 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,945 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,945 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,952 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,955 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,955 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,955 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,955 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,955 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,955 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,955 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,965 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,968 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,969 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,970 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,972 assembler.py:38] Total Assembly Time - 1.05405 (ms)\n",
      "INFO 2024-04-17 19:26:15,973 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,975 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,976 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,977 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,979 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,980 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:15,982 assembler.py:38] Total Assembly Time - 0.00000 (ms)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Here is the list of cloud backends that are available to you:\n",
      "ibmq_qasm_simulator\n",
      "simulator_statevector\n",
      "simulator_mps\n",
      "simulator_extended_stabilizer\n",
      "simulator_stabilizer\n",
      "ibm_sherbrooke\n",
      "ibm_brisbane\n",
      "ibm_kyoto\n",
      "ibm_osaka\n",
      "\n",
      "Here is the list of local backends that are available to you: \n",
      "aer_simulator\n",
      "aer_simulator_statevector\n",
      "aer_simulator_density_matrix\n",
      "aer_simulator_stabilizer\n",
      "aer_simulator_matrix_product_state\n",
      "aer_simulator_extended_stabilizer\n",
      "aer_simulator_unitary\n",
      "aer_simulator_superop\n",
      "qasm_simulator\n",
      "statevector_simulator\n",
      "unitary_simulator\n",
      "pulse_simulator\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\abc\\anaconda3\\lib\\site-packages\\qiskit_aer\\aerprovider.py:86: DeprecationWarning: The Pulse simulator backend in Qiskit Aer is deprecated and will be removed in a future release. Instead the qiskit-dynamics library should be used instead for simulating at the pulse level.\n",
      "  backends.append(backend_cls(**opts))\n"
     ]
    }
   ],
   "source": [
    "available_cloud_backends = provider.backends() \n",
    "print('\\nHere is the list of cloud backends that are available to you:')\n",
    "for i in available_cloud_backends: print(i)\n",
    "\n",
    "available_local_backends = Aer.backends() \n",
    "print('\\nHere is the list of local backends that are available to you: ')\n",
    "for i in available_local_backends: print(i)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41b6ced1",
   "metadata": {},
   "source": [
    "## QPE circuit construction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1114c3ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "## QPE implementation (for running quantum simulations)\n",
    "\n",
    "def inverse_qft(qc, precision_qubits, with_inverse_barriers = True, swap = True):\n",
    "    \"\"\"\n",
    "    Purpose: Implements inverse QFT\n",
    "    Input: qc -> circuit to append the inverse QFT circuit to\n",
    "           precision_qubits -> Implement\n",
    "    \"\"\"\n",
    "    n = len(precision_qubits)\n",
    "    \n",
    "    if swap:\n",
    "        for qubit in range(n//2):\n",
    "            qc.swap(precision_qubits[qubit], precision_qubits[n - qubit - 1])\n",
    "    if with_inverse_barriers:\n",
    "        qc.barrier() ## for visualization purposes\n",
    "    \n",
    "    for target in reversed(range(n)):\n",
    "        for control in reversed(range(target + 1, n)):\n",
    "            k = control - target + 1\n",
    "            angle = -2 * math.pi/(2**k)\n",
    "            qc.cp(angle, precision_qubits[control], precision_qubits[target], label = f\"R_{k}_dag\") ## apply controlled phase gates\n",
    "        qc.h(precision_qubits[target])\n",
    "        \n",
    "        if with_inverse_barriers and target != 0:\n",
    "            qc.barrier() ## for visualization purposes\n",
    "        \n",
    "def controlled_unitary(circ, control, target_qubits, unitary):\n",
    "    \"\"\"\n",
    "    Purpose: Implement controlled unitary gate\n",
    "    Input: circ -> circuit to append the controlled unitary onto\n",
    "           control -> List containing the control qubit\n",
    "           target_qubits -> List containing the target qubits\n",
    "           unitary -> Numpy array representing unitary matrix that will be turned into a gate\n",
    "    Output: circ -> circuit with the the controlled unitary gate\n",
    "    \"\"\"\n",
    "    U_gate = UnitaryGate(unitary)\n",
    "    U_gate_ctrl = U_gate.control(1)\n",
    "    targets = [control] + target_qubits\n",
    "    circ.append(U_gate_ctrl, targets)\n",
    "    \n",
    "def qpe_without_DD(qpe_circ, precision_qubits, query_qubits, unitary, angles = None, control_unitary = True, \\\n",
    "                  with_inverse_barriers = True, measure = True):\n",
    "    \"\"\"\n",
    "    Purpose: Construct the QPE circuit for a specific unitary operator without applying DD to the circuit\n",
    "    Input: precision_qubits -> List containing the precision qubits\n",
    "           query_qubits -> List containing the query qubits\n",
    "           unitary -> the unitary operator used for the QPE\n",
    "           control_unitary -> Boolean value representing the implementation of controlled unitary in each iteration.\n",
    "                              Default is True, meaning that the power to the unitary operator is found, thus reducing\n",
    "                              the number of gates needed.\n",
    "    Output: qpe_circ -> the QPE Circuit\n",
    "    \"\"\"\n",
    "    num_precision_qubits = len(precision_qubits)\n",
    "    num_query_qubits = len(query_qubits)\n",
    "    total_qubits = num_precision_qubits + num_query_qubits\n",
    "    \n",
    "    ## Apply Hadamard gates to all precision qubits\n",
    "    qpe_circ.h(precision_qubits)\n",
    "    \n",
    "    if isinstance(angles, np.ndarray):\n",
    "        assert len(angles) == len(query_qubits)\n",
    "        for i in range(len(query_qubits)):\n",
    "            if angles[i] != 0:\n",
    "                qpe_circ.ry(angles[i] * 2, len(query_qubits) + len(precision_qubits) - 1 - i)\n",
    "                \n",
    "    for ii, qubit in enumerate(reversed(precision_qubits)):\n",
    "        power = ii\n",
    "        if control_unitary: \n",
    "            Uexp = np.linalg.matrix_power(unitary, 2 ** power)\n",
    "            controlled_unitary(qpe_circ, qubit, query_qubits, Uexp)\n",
    "        \n",
    "        else:\n",
    "            for _ in range(2 ** power):\n",
    "                # Apply controlled unitary operations\n",
    "                controlled_unitary(qpe_circ, qubit, query_qubits, unitary)\n",
    "                \n",
    "    qpe_circ.barrier()  # for visualization purposes\n",
    "    inverse_qft(qpe_circ, precision_qubits, with_inverse_barriers = with_inverse_barriers)\n",
    "    qpe_circ.barrier()  # for visualization purposes\n",
    "    \n",
    "    ## Add measurements\n",
    "    if measure:\n",
    "        for n in range(total_qubits):\n",
    "            qpe_circ.measure(n, n)\n",
    "    \n",
    "################################################################################################################################\n",
    "# The following functions implement different versions of the QPE circuit\n",
    "# Refer Dingding Wei's senior thesis for more details\n",
    "            \n",
    "def mqpe(circ, unitary, precision_number, query_number, precision_verification_factor, query_verification_factor, \\\n",
    "        control_unitary = True, with_inverse_barriers = True, measure = True):\n",
    "    \n",
    "    num_precision_qubits = precision_number * precision_verification_factor\n",
    "    num_query_qubits = query_number * query_verification_factor\n",
    "    total_qubits = num_precision_qubits + num_query_qubits\n",
    "    \n",
    "    ## Initializing lists containing the precision and query qubits\n",
    "    precision_qubits = list(np.arange(0, num_precision_qubits, precision_verification_factor))\n",
    "    query_qubits = list(np.arange(num_precision_qubits, total_qubits, query_verification_factor))\n",
    "    \n",
    "    ## Applying the Quantum Phase Estimation algorithm\n",
    "    qpe_without_DD(circ, precision_qubits, query_qubits, unitary, control_unitary = control_unitary, \\\n",
    "       with_inverse_barriers = with_inverse_barriers, measure = False)\n",
    "    \n",
    "    circ.barrier() ## for visualization purposes\n",
    "    \n",
    "    ## Adding relevant gates for post-processing\n",
    "    for control in precision_qubits:\n",
    "        for j in range(1, precision_verification_factor):\n",
    "            circ.cx(control, control + j)\n",
    "            \n",
    "    circ.barrier() ## for visualization purposes\n",
    "    \n",
    "    for control in query_qubits:\n",
    "        for j in range(1, query_verification_factor):\n",
    "            circ.cx(control, control + j)\n",
    "            \n",
    "    circ.barrier() ## for visualization purposes\n",
    "    \n",
    "    ## Adding measurements\n",
    "    if measure:\n",
    "        for n in range(total_qubits):\n",
    "            circ.measure(n, n)\n",
    "\n",
    "def mqpe2(circ, unitary, precision_number, query_number, precision_verification_factor, query_verification_factor, \\\n",
    "         control_unitary = True, with_inverse_barriers = True, measure = True, \\\n",
    "         measure_post_first_iter = True, measure_all_post_first = False, min_power = 0, with_toffoli = False):\n",
    "    \n",
    "    ## Implement a check condition to ensure query verification exists \n",
    "    if measure_post_first_iter:\n",
    "        assert query_verification_factor > 1, \"Cannot measure_post_first_iter if there is no query verification\"\n",
    "        \n",
    "    num_precision_qubits = precision_number * precision_verification_factor\n",
    "    num_query_qubits = query_number * query_verification_factor\n",
    "    total_qubits = num_precision_qubits + num_query_qubits\n",
    "    \n",
    "    ## Initializing lists containing the precision and query qubits\n",
    "    precision_qubits = list(np.arange(0, num_precision_qubits, precision_verification_factor))\n",
    "    query_qubits = list(np.arange(num_precision_qubits, total_qubits, query_verification_factor))\n",
    "    \n",
    "    ## Add Hadamard gates to all precision qubits\n",
    "    circ.h(precision_qubits) # note: precision_qubits is a list\n",
    "    \n",
    "    ## Apply controlled unitary operations and add relevant gates for post-processing\n",
    "    for ii, qubit in enumerate(precision_qubits):\n",
    "        power = ii + min_power\n",
    "        \n",
    "        if control_unitary:\n",
    "            Uexp = np.linalg.matrix_power(unitary, 2 ** power)\n",
    "            controlled_unitary(circ, qubit, query_qubits, Uexp)   \n",
    "        \n",
    "        else:\n",
    "            for _ in range(2**power):\n",
    "                controlled_unitary(circ, qubit, query_qubits, unitary)\n",
    "                \n",
    "        if power == 0 and measure_post_first_iter:\n",
    "            if measure_all_post_first:\n",
    "                for control in query_qubits:\n",
    "                    if with_toffoli:\n",
    "                        circ.toffoli(qubit, control, control + j)\n",
    "                    else:\n",
    "                        circ.cx(control, control + j)\n",
    "                        \n",
    "            else:\n",
    "                for control in query_qubits:\n",
    "                    if with_toffoli:\n",
    "                        circ.toffoli(qubit, control, control + 1)\n",
    "                    else:\n",
    "                        circ.cx(control, control + 1)\n",
    "                        \n",
    "        if measure_post_first_iter:\n",
    "            if not measure_all_post_first:\n",
    "                for control in query_qubits:\n",
    "                    for j in range(2, query_verification_factor):\n",
    "                        if with_toffoli:\n",
    "                            circ.toffoli(precision_qubits[-1], control, control + j)\n",
    "                        else:\n",
    "                            circ.cx(control, control + j)\n",
    "        else:\n",
    "            for control in query_qubits:\n",
    "                for j in range(1, query_verification_factor):\n",
    "                    if with_toffoli:\n",
    "                        circ.toffoli(precision_qubits[-1], control, control + j)\n",
    "                    else:\n",
    "                        circ.cx(control, control + j)\n",
    "        \n",
    "        ## Applying the inverse QFT to the circuit\n",
    "        inverse_qft(circ, precision_qubits, with_inverse_barriers = with_inverse_barriers, swap = False)\n",
    "        \n",
    "        for control in precision_qubits:\n",
    "            for j in range(1, query_verification_factor):\n",
    "                circ.cx(control, control + j)\n",
    "        \n",
    "        circ.barrier() ## for visualization purposes\n",
    "        \n",
    "        ## Adding measurements\n",
    "        if measure:\n",
    "            for n in range(total_qubits):\n",
    "                circ.measure(n, n)\n",
    "                \n",
    "def mqpe3(circ, unitary, precision_number, query_number, precision_verification_factor, query_verification_factor, \\\n",
    "         control_unitary = True, with_inverse_barriers = True, measure = True, measure_post_first_iter = True):\n",
    "    \n",
    "    ## Implement a check condition to ensure query verification exists \n",
    "    if measure_post_first_iter:\n",
    "        assert query_verification_factor > 1, \"Cannot measure_post_first_iter if there is no query verification\"\n",
    "        \n",
    "    num_precision_qubits = precision_number * precision_verification_factor\n",
    "    num_query_qubits = query_number * query_verification_factor\n",
    "    total_qubits = num_precision_qubits + num_query_qubits\n",
    "    \n",
    "    ## Initializing lists containing the precision and query qubits\n",
    "    precision_qubits = list(np.arange(0, num_precision_qubits, precision_verification_factor))\n",
    "    query_qubits = list(np.arange(num_precision_qubits, total_qubits, query_verification_factor))\n",
    "    \n",
    "    ## Add Hadamard gates to all precision qubits\n",
    "    circ.h(precision_qubits) # note: precision_qubits is a list\n",
    "    \n",
    "    for ii, qubit in enumerate(precision_qubits):\n",
    "        power = ii\n",
    "        \n",
    "        if control_unitary:\n",
    "            Uexp = np.linalg.matrix_power(unitary, 2 ** power)\n",
    "            controlled_unitary(circ, qubit, query_qubits, Uexp)\n",
    "        else:\n",
    "            for _ in range(2 ** power):\n",
    "                controlled_unitary(circ, qubit, query_qubits, unitary)\n",
    "        \n",
    "        if power == 0 and measure_post_first_iter:\n",
    "            for control in query_qubits:\n",
    "                for j in range(1, query_verification_factor):\n",
    "                    circ.cx(control, control + j)\n",
    "    \n",
    "    circ.barrier() ## for visualization purposes\n",
    "    \n",
    "    ## Applying inverse QFT to the circuit\n",
    "    inverse_qft(circ, precision_qubits, with_inverse_barriers = with_inverse_barriers, swap = False)\n",
    "    \n",
    "    circ.barrier() ## for visualization purposes\n",
    "    \n",
    "    for control in precision_qubits:\n",
    "        for j in range(1, precision_verification_factor):\n",
    "            circ.cx(control, control + j)\n",
    "    \n",
    "    if not measure_post_first_iter:\n",
    "        for control in query_qubits:\n",
    "            for j in range(1, precision_verification_factor):\n",
    "                circ.cx(control, control + j)\n",
    "    \n",
    "    circ.barrier() ## for visualization purposes\n",
    "    \n",
    "    ## Add measurements\n",
    "    if measure:\n",
    "        for n in range(total_qubits):\n",
    "            circ.measure(n, n)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "894a9837",
   "metadata": {},
   "source": [
    "## Implementing controlled unitary gate operations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7b3dd8a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_unitary(matrix, add_half = False):\n",
    "    \"\"\"\n",
    "    Purpose: given a matrix, returns the unitary, hermitian matrix to be diagonalized\n",
    "    Input: matrix -> the matrix to be diagonalized\n",
    "    Output: U -> the unitary matrix\n",
    "            nqubits -> the number of qubis needed to represent the basis of U\n",
    "            dimension -> the dimension of the original matrix\n",
    "    \"\"\"\n",
    "    assert matrix.ndim == 2, \"Error: Only a matrix maybe processed\"\n",
    "    assert matrix.shape[0] == matrix.shape[1], \"Error: Only a square matrix maybe processed\"\n",
    "\n",
    "    if np.any(np.transpose(matrix) != matrix):\n",
    "        matrix_T = np.transpose(matrix)\n",
    "        matrix = np.dot(matrix_T, matrix)\n",
    "\n",
    "    ## Finding the dimension of the matrix\n",
    "    dimension_hermitian = matrix.shape[0]\n",
    "\n",
    "    ## Finding the number of qubits required to represent the matrix\n",
    "    nqubits = int(np.ceil(np.log2(dimension_hermitian)))\n",
    "\n",
    "    ## Construct the relevant matrix\n",
    "    op_dim = 2 ** nqubits\n",
    "    op = np.eye(op_dim)\n",
    "    op[0:dimension_hermitian, 0:dimension_hermitian] = np.copy(matrix)\n",
    "\n",
    "    if add_half:\n",
    "        op = op + np.pi * np.eye(op.shape[0])\n",
    "\n",
    "    U = la.expm(1j*op)\n",
    "    \n",
    "    # Get the dimensions of the unitary matrix\n",
    "    dimension = U.shape[0]\n",
    "\n",
    "    return U, nqubits, dimension\n",
    "\n",
    "def get_qubits(n_precision_qubits, n_query_qubits):\n",
    "    \"\"\"\n",
    "    Purpose: defines the precision and query qubits\n",
    "    Input: n_precision_qubits -> the number of precision qubits used by the QPE\n",
    "           n_query_qubits -> the number of query qubits used by the QPE\n",
    "    \"\"\"\n",
    "    total_qubits = list(range(n_precision_qubits + n_query_qubits))\n",
    "\n",
    "    precision_qubits = total_qubits[0:n_precision_qubits]\n",
    "    query_qubits = total_qubits[n_precision_qubits:]\n",
    "\n",
    "    return precision_qubits, query_qubits\n",
    "\n",
    "def unitary_swap(num_query_qubits, state1, state2):\n",
    "    U = np.eye(2**num_query_qubits)\n",
    "    \n",
    "    temp = np.copy(U[:, state1])\n",
    "    U[:, state1] = U[:, state2]\n",
    "    U[:, state2] = temp\n",
    "    \n",
    "    return U"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01b792a5",
   "metadata": {},
   "source": [
    "## Implementing dynamical decoupling (note: not relevant for the present study)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0f2f2fe0",
   "metadata": {},
   "outputs": [],
   "source": [
    "class DynamicalDecoupling(TransformationPass):\n",
    "    \"\"\"Dynamical decoupling insertion pass.\n",
    "\n",
    "    This pass works on a scheduled, physical circuit. It scans the circuit for\n",
    "    idle periods of time (i.e. those containing delay instructions) and inserts\n",
    "    a DD sequence of gates in those spots. These gates amount to the identity,\n",
    "    so do not alter the logical action of the circuit, but have the effect of\n",
    "    mitigating decoherence in those idle periods.\n",
    "\n",
    "    As a special case, the pass allows a length-1 sequence (e.g. [XGate()]).\n",
    "    In this case the DD insertion happens only when the gate inverse can be\n",
    "    absorbed into a neighboring gate in the circuit (so we would still be\n",
    "    replacing Delay with something that is equivalent to the identity).\n",
    "    This can be used, for instance, as a Hahn echo.\n",
    "\n",
    "    This pass ensures that the inserted sequence preserves the circuit exactly\n",
    "    (including global phase).\n",
    "\n",
    "    .. jupyter-execute::\n",
    "\n",
    "        import numpy as np\n",
    "        from qiskit.circuit import QuantumCircuit\n",
    "        from qiskit.circuit.library import XGate\n",
    "        from qiskit.transpiler import PassManager, InstructionDurations\n",
    "        from qiskit.transpiler.passes import ALAPSchedule, DynamicalDecoupling\n",
    "        from qiskit.visualization import timeline_drawer\n",
    "        circ = QuantumCircuit(4)\n",
    "        circ.h(0)\n",
    "        circ.cx(0, 1)\n",
    "        circ.cx(1, 2)\n",
    "        circ.cx(2, 3)\n",
    "        circ.measure_all()\n",
    "        durations = InstructionDurations(\n",
    "            [(\"h\", 0, 50), (\"cx\", [0, 1], 700), (\"reset\", None, 10),\n",
    "             (\"cx\", [1, 2], 200), (\"cx\", [2, 3], 300),\n",
    "             (\"x\", None, 50), (\"measure\", None, 1000)]\n",
    "        )\n",
    "\n",
    "    .. jupyter-execute::\n",
    "\n",
    "        # balanced X-X sequence on all qubits\n",
    "        dd_sequence = [XGate(), XGate()]\n",
    "        pm = PassManager([ALAPSchedule(durations),\n",
    "                          DynamicalDecoupling(durations, dd_sequence)])\n",
    "        circ_dd = pm.run(circ)\n",
    "        timeline_drawer(circ_dd)\n",
    "\n",
    "    .. jupyter-execute::\n",
    "\n",
    "        # Uhrig sequence on qubit 0\n",
    "        n = 8\n",
    "        dd_sequence = [XGate()] * n\n",
    "        def uhrig_pulse_location(k):\n",
    "            return np.sin(np.pi * (k + 1) / (2 * n + 2)) ** 2\n",
    "        spacing = []\n",
    "        for k in range(n):\n",
    "            spacing.append(uhrig_pulse_location(k) - sum(spacing))\n",
    "        spacing.append(1 - sum(spacing))\n",
    "        pm = PassManager(\n",
    "            [\n",
    "                ALAPSchedule(durations),\n",
    "                DynamicalDecoupling(durations, dd_sequence, qubits=[0], spacing=spacing),\n",
    "            ]\n",
    "        )\n",
    "        circ_dd = pm.run(circ)\n",
    "        timeline_drawer(circ_dd)\n",
    "    \"\"\"\n",
    "\n",
    "    def __init__(self, durations, dd_sequence, name=None, qubits=None, spacing=None, skip_reset_qubits=True):\n",
    "        \"\"\"Dynamical decoupling initializer.\n",
    "\n",
    "        Args:\n",
    "            durations (InstructionDurations): Durations of instructions to be\n",
    "                used in scheduling.\n",
    "            dd_sequence (list[Gate]): sequence of gates to apply in idle spots.\n",
    "            qubits (list[int]): physical qubits on which to apply DD.\n",
    "                If None, all qubits will undergo DD (when possible).\n",
    "            spacing (list[float]): a list of spacings between the DD gates.\n",
    "                The available slack will be divided according to this.\n",
    "                The list length must be one more than the length of dd_sequence,\n",
    "                and the elements must sum to 1. If None, a balanced spacing\n",
    "                will be used [d/2, d, d, ..., d, d, d/2].\n",
    "            skip_reset_qubits (bool): if True, does not insert DD on idle\n",
    "                periods that immediately follow initialized/reset qubits (as\n",
    "                qubits in the ground state are less susceptile to decoherence).\n",
    "        \"\"\"\n",
    "        super().__init__()\n",
    "        self._durations = durations\n",
    "        self._dd_sequence = dd_sequence\n",
    "        self._qubits = qubits\n",
    "        self._spacing = spacing\n",
    "        self._skip_reset_qubits = skip_reset_qubits\n",
    "        self._if_DD = False\n",
    "        self._name = name\n",
    "\n",
    "    def run(self, dag):\n",
    "        \"\"\"Run the DynamicalDecoupling pass on dag.\n",
    "\n",
    "        Args:\n",
    "            dag (DAGCircuit): a scheduled DAG.\n",
    "\n",
    "        Returns:\n",
    "            DAGCircuit: equivalent circuit with delays interrupted by DD,\n",
    "                where possible.\n",
    "\n",
    "        Raises:\n",
    "            TranspilerError: if the circuit is not mapped on physical qubits.\n",
    "        \"\"\"\n",
    "        if len(dag.qregs) != 1 or dag.qregs.get(\"q\", None) is None:\n",
    "            raise TranspilerError(\"DD runs on physical circuits only.\")\n",
    "\n",
    "        if dag.duration is None:\n",
    "            raise TranspilerError(\"DD runs after circuit is scheduled.\")\n",
    "\n",
    "        num_pulses = len(self._dd_sequence)\n",
    "        sequence_gphase = 0\n",
    "        if num_pulses != 1:\n",
    "            if num_pulses % 2 != 0:\n",
    "                raise TranspilerError(\"DD sequence must contain an even number of gates (or 1).\")\n",
    "            noop = np.eye(2)\n",
    "            for gate in self._dd_sequence:\n",
    "                noop = noop.dot(gate.to_matrix())\n",
    "            if not matrix_equal(noop, IGate().to_matrix(), ignore_phase=True):\n",
    "                raise TranspilerError(\"The DD sequence does not make an identity operation.\")\n",
    "            sequence_gphase = np.angle(noop[0][0])\n",
    "\n",
    "        if self._qubits is None:\n",
    "            self._qubits = set(range(dag.num_qubits()))\n",
    "        else:\n",
    "            self._qubits = set(self._qubits)\n",
    "\n",
    "        if self._spacing:\n",
    "            if fsum(self._spacing) != 1 or any(a < 0 for a in self._spacing):\n",
    "                raise TranspilerError(\n",
    "                    \"The spacings must be given in terms of fractions \"\n",
    "                    \"of the slack period and sum to 1.\"\n",
    "                )\n",
    "        else:  # default to balanced spacing\n",
    "            mid = 1 / num_pulses\n",
    "            end = mid / 2\n",
    "            self._spacing = [end] + [mid] * (num_pulses - 1) + [end]\n",
    "\n",
    "        new_dag = dag._copy_circuit_metadata()\n",
    "\n",
    "        qubit_index_map = {qubit: index for index, qubit in enumerate(new_dag.qubits)}\n",
    "        index_sequence_duration_map = {}\n",
    "        for qubit in new_dag.qubits:\n",
    "            physical_qubit = qubit_index_map[qubit]\n",
    "            dd_sequence_duration = 0\n",
    "            for gate in self._dd_sequence:\n",
    "                gate.duration = self._durations.get(gate, physical_qubit)\n",
    "                dd_sequence_duration += gate.duration\n",
    "            index_sequence_duration_map[physical_qubit] = dd_sequence_duration\n",
    "\n",
    "        for nd in dag.topological_op_nodes():\n",
    "            if not isinstance(nd.op, Delay):\n",
    "                new_dag.apply_operation_back(nd.op, nd.qargs, nd.cargs)\n",
    "                continue\n",
    "\n",
    "            dag_qubit = nd.qargs[0]\n",
    "            physical_qubit = qubit_index_map[dag_qubit]\n",
    "            if physical_qubit not in self._qubits:  # skip unwanted qubits\n",
    "                new_dag.apply_operation_back(nd.op, nd.qargs, nd.cargs)\n",
    "                continue\n",
    "\n",
    "            pred = next(dag.predecessors(nd))\n",
    "            succ = next(dag.successors(nd))\n",
    "            if self._skip_reset_qubits:  # discount initial delays\n",
    "                if isinstance(pred, DAGInNode) or isinstance(pred.op, Reset):\n",
    "                    new_dag.apply_operation_back(nd.op, nd.qargs, nd.cargs)\n",
    "                    continue\n",
    "\n",
    "            dd_sequence_duration = index_sequence_duration_map[physical_qubit]\n",
    "            slack = nd.op.duration - dd_sequence_duration\n",
    "            if slack <= 0:  # dd doesn't fit\n",
    "                new_dag.apply_operation_back(nd.op, nd.qargs, nd.cargs)\n",
    "                continue\n",
    "\n",
    "            if num_pulses == 1:  # special case of using a single gate for DD\n",
    "                u_inv = self._dd_sequence[0].inverse().to_matrix()\n",
    "                theta, phi, lam, phase = OneQubitEulerDecomposer().angles_and_phase(u_inv)\n",
    "                # absorb the inverse into the successor (from left in circuit)\n",
    "                if isinstance(succ, DAGOpNode) and isinstance(succ.op, (UGate, U3Gate)):\n",
    "                    theta_r, phi_r, lam_r = succ.op.params\n",
    "                    succ.op.params = Optimize1qGates.compose_u3(\n",
    "                        theta_r, phi_r, lam_r, theta, phi, lam\n",
    "                    )\n",
    "                    sequence_gphase += phase\n",
    "                    self._if_DD = True\n",
    "                # absorb the inverse into the predecessor (from right in circuit)\n",
    "                elif isinstance(pred, DAGOpNode) and isinstance(pred.op, (UGate, U3Gate)):\n",
    "                    theta_l, phi_l, lam_l = pred.op.params\n",
    "                    pred.op.params = Optimize1qGates.compose_u3(\n",
    "                        theta, phi, lam, theta_l, phi_l, lam_l\n",
    "                    )\n",
    "                    sequence_gphase += phase\n",
    "                    self._if_DD = True\n",
    "                # don't do anything if there's no single-qubit gate to absorb the inverse\n",
    "                else:\n",
    "                    new_dag.apply_operation_back(nd.op, nd.qargs, nd.cargs)\n",
    "                    continue\n",
    "\n",
    "            # insert the actual DD sequence\n",
    "            self._if_DD = True\n",
    "            taus = [int(slack * a) for a in self._spacing]\n",
    "            unused_slack = slack - sum(taus)  # unused, due to rounding to int multiples of dt\n",
    "            middle_index = int((len(taus) - 1) / 2)  # arbitrary: redistribute to middle\n",
    "            taus[middle_index] += unused_slack  # now we add up to original delay duration\n",
    "\n",
    "            for tau, gate in itertools.zip_longest(taus, self._dd_sequence):\n",
    "                if tau > 0:\n",
    "                    new_dag.apply_operation_back(Delay(tau), [dag_qubit])\n",
    "                if gate is not None:\n",
    "                    new_dag.apply_operation_back(gate, [dag_qubit])\n",
    "\n",
    "            new_dag.global_phase = _mod_2pi(new_dag.global_phase + sequence_gphase)\n",
    "\n",
    "        print(f'if applied DD for {self._name}: {self._if_DD}')\n",
    "        return new_dag\n",
    "\n",
    "\n",
    "def _mod_2pi(angle: float, atol: float = 0):\n",
    "    \"\"\"Wrap angle into interval [-π,π). If within atol of the endpoint, clamp to -π\"\"\"\n",
    "    \n",
    "    wrapped = (angle + np.pi) % (2 * np.pi) - np.pi\n",
    "    if abs(wrapped - np.pi) < atol:\n",
    "        wrapped = -np.pi\n",
    "    return wrapped"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5dd6959",
   "metadata": {},
   "source": [
    "## DD insertion tools"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1a83aa74",
   "metadata": {},
   "outputs": [],
   "source": [
    "## DD tools (for translation of circuit to basis gates and insertion of DD sequences)\n",
    "\n",
    "def translate_circuit_to_basis(\n",
    "    input_circuit: QuantumCircuit, configuration: BackendConfiguration\n",
    ") -> QuantumCircuit:\n",
    "    \"\"\"Unroll the given circuit with the basis in the given configuration.\"\"\"\n",
    "    \n",
    "    basis = configuration.basis_gates\n",
    "    translator = BasisTranslator(SessionEquivalenceLibrary, basis)\n",
    "    unrolled_dag = translator.run(circuit_to_dag(input_circuit))\n",
    "    return dag_to_circuit(unrolled_dag)\n",
    "\n",
    "## The following functions implement DD within the QPE circuit\n",
    "\n",
    "def pm_hahn_X(durations):\n",
    "    # Function to insert the Hahn echo sequence with XGate() at idle qubit times within the QPE circuit\n",
    "    \n",
    "    hahn_x = [XGate()]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, hahn_x)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_hahn_Y(durations):\n",
    "    # Function to insert the Hahn echo sequence with YGate() at idle qubit times within the QPE circuit\n",
    "    \n",
    "    hahn_y = [YGate()]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, hahn_y)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_CP_DD(durations):\n",
    "    # Function to insert the CP sequence at idle qubit times within the QPE circuit\n",
    "    \n",
    "    cp_sequence = [XGate(), XGate()]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, cp_sequence)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_CPMG_DD(durations):\n",
    "    # Function to insert the CPMG sequence at idle qubit times within the QPE circuit\n",
    "    \n",
    "    cpmg_sequence = [YGate(), YGate()]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, cpmg_sequence)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_XYXY_DD(durations):\n",
    "    # Function to insert the XYXY sequence\n",
    "    \n",
    "    xy4_sequence = [XGate(), YGate(), XGate(), YGate()]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, xy4_sequence)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_YZYZ_DD(durations):\n",
    "    # Function to insert the YZYZ sequence\n",
    "    \n",
    "    yz4_sequence = [YGate(), ZGate(), YGate(), ZGate()]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, yz4_sequence)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_XZXZ_DD(durations):\n",
    "    # Function to insert the XZXZ sequence\n",
    "    \n",
    "    xz4_sequence = [XGate(), ZGate(), XGate(), ZGate()]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, xz4_sequence)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_CDD(durations):\n",
    "    # Function to insert the CDD sequence of order 2 at idle qubit times within the QPE circuit\n",
    "    \n",
    "    cdd_sequence = [XGate(), XGate(), YGate(), XGate(), YGate(), YGate(), XGate(), YGate(), XGate(), YGate(), XGate(), XGate(), \\\n",
    "                    YGate(), XGate(), YGate(), YGate()]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, cdd_sequence)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_XY8_DD(durations):\n",
    "    # Function to implement the XY8 sequence at idle qubit times within the QPE circuit\n",
    "    \n",
    "    xy8_sequence = [XGate(), YGate(), XGate(), YGate(), YGate(), XGate(), YGate(), XGate()]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, xy8_sequence)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_XY16_DD(durations):\n",
    "    # Function to implement the XY16 sequence at idle qubit times within the QPE circuit\n",
    "    \n",
    "    xy16_sequence = [XGate(), YGate(), XGate(), YGate(), YGate(), XGate(), YGate(), XGate(),\n",
    "                     RXGate(-np.pi), RYGate(-np.pi), RXGate(-np.pi), RYGate(-np.pi), RYGate(-np.pi), RXGate(-np.pi),\n",
    "                     RYGate(-np.pi), RXGate(-np.pi)]\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, xy16_sequence)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "## The following functions implement the Uhrig and KDD sequences\n",
    "def uhrig_pulse_location(k, n):\n",
    "    # Function to define time intervals for application of the Uhrig DD sequences\n",
    "    \n",
    "    return np.sin(np.pi * (k + 1) / (2 * n + 2)) ** 2\n",
    "\n",
    "def construct_udd_sequence(rep: int,\n",
    "                           rep_gate,):\n",
    "    # Function to construct the Uhrig DD sequence\n",
    "    # Taken from Qiskit's documentation\n",
    "    \n",
    "    udd_sequence = [rep_gate] * rep\n",
    "    spacing = []\n",
    "    \n",
    "    for k in range(rep):\n",
    "        spacing.append(uhrig_pulse_location(k, rep) - sum(spacing))\n",
    "    spacing.append(1 - sum(spacing))\n",
    "    \n",
    "    return udd_sequence, spacing\n",
    "\n",
    "def theta_phi(theta, phi):\n",
    "    # Function to define rotation gates for the KDD sequences\n",
    "    \n",
    "    return [RZGate(phi), RXGate(-theta), RZGate(-phi)]\n",
    "\n",
    "def one_sequence(phi):\n",
    "    \n",
    "    sequence = []\n",
    "    sequence.extend(theta_phi(np.pi, np.pi/6 + phi))\n",
    "    sequence.extend(theta_phi(np.pi, phi))\n",
    "    sequence.extend(theta_phi(np.pi, np.pi/2 + phi))\n",
    "    sequence.extend(theta_phi(np.pi, phi))\n",
    "    sequence.extend(theta_phi(np.pi, np.pi/6 + phi))\n",
    "    \n",
    "    return sequence\n",
    "\n",
    "def pm_kdd_sequences():\n",
    "    # Function to insert the KDD sequence at idle qubit times within the QPE circuit\n",
    "    \n",
    "    seqences = []\n",
    "    seqences.extend(one_sequence(0))\n",
    "    seqences.extend(one_sequence(np.pi / 2))\n",
    "    seqences.extend(one_sequence(0))\n",
    "    seqences.extend(one_sequence(np.pi / 2))\n",
    "    \n",
    "    return seqences\n",
    "\n",
    "def kdd_spacing(num_pulses = 20):\n",
    "    # Function to define pulse spacing for the KDD sequence\n",
    "    \n",
    "    mid = 1 / num_pulses\n",
    "    end = mid / 2\n",
    "    spacing = []\n",
    "    spacing.append(end)\n",
    "    interval = [0] * 2\n",
    "    \n",
    "    for i in range(num_pulses):\n",
    "        spacing.extend(interval)\n",
    "        if i < num_pulses - 1:\n",
    "            spacing.append(mid)\n",
    "    spacing.append(end)\n",
    "    \n",
    "    return spacing\n",
    "\n",
    "def pm_uhrig_x(durations):\n",
    "    # Function to insert the UDD sequence with XGate()\n",
    "    # Note: 8 gates make up the sequence\n",
    "    \n",
    "    sequence_x, spacing_x = construct_udd_sequence(8, XGate())\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, sequence_x, spacing = spacing_x)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_uhrig_y(durations):\n",
    "    # Function to insert the UDD sequence with YGate()\n",
    "    # Note: 8 gates make up the sequence\n",
    "    \n",
    "    sequence_y, spacing_y = construct_udd_sequence(8, YGate())\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, sequence_y, spacing = spacing_y)])\n",
    "    \n",
    "    return pm\n",
    "\n",
    "def pm_KDD(durations):\n",
    "    # Function to insert the KDD sequence at idle qubit times within the QPE circuit\n",
    "    \n",
    "    kdd_spaces = kdd_spacing()\n",
    "    kdd_sequence = pm_kdd_sequences()\n",
    "    pm = PassManager([ALAPSchedule(durations),\n",
    "                      DynamicalDecoupling(durations, kdd_sequence, spacing = kdd_spaces)])\n",
    "    \n",
    "    return pm"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4eceac75",
   "metadata": {},
   "source": [
    "## Post-processing QPE results (no DD)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9be055d1",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Post-processing of results and analysis\n",
    "\n",
    "def substring(key, precision_qubits):\n",
    "    short_key = \"\"\n",
    "    for idx in precision_qubits:\n",
    "        short_key = short_key + key[idx]\n",
    "\n",
    "    return short_key\n",
    "\n",
    "def binaryToDecimal(binary):\n",
    "    \"\"\"\n",
    "    Purpose: Converts binary fractional to decimal fractional\n",
    "    Input: binary -> binary string to be converted to decimal fractional\n",
    "    Output: fracDecimal -> decimal fractional\n",
    "    \"\"\"\n",
    "    length = len(binary)\n",
    "    fracDecimal = 0\n",
    "    twos = 2\n",
    "\n",
    "    for ii in range(length):\n",
    "        fracDecimal += (ord(binary[ii]) - ord(\"0\")) / twos\n",
    "        twos *= 2.0\n",
    "    return fracDecimal\n",
    "\n",
    "# def find_expected_precision_qubit_output(phases_true, n_precision):\n",
    "    \n",
    "#     phases = [x + 2 * np.pi for x in phases_true]\n",
    "    \n",
    "#     query_bit_string = []\n",
    "#     phases_binary_expected = np.zeros(len(phases))\n",
    "    \n",
    "#     phases = phases / (2 * np.pi)\n",
    "    \n",
    "#     for i in range(len(phases)):\n",
    "#         bit_string = \"\"\n",
    "        \n",
    "#         phase = phases[i]\n",
    "#         while(phase > 1):\n",
    "#             phase = phase - 1\n",
    "        \n",
    "#         assert phase > 0 and phase < 2*np.pi\n",
    "        \n",
    "#         for j in range(n_precision):\n",
    "#             power = j + 1\n",
    "            \n",
    "#             xj = 0.5**power\n",
    "            \n",
    "#             if xj < phase:\n",
    "#                 phase = phase - xj\n",
    "#                 bit_string = bit_string + \"1\"\n",
    "#                 phases_binary_expected[i] = phases_binary_expected[i] + xj\n",
    "#             else:\n",
    "#                 bit_string = bit_string + \"0\"\n",
    "                \n",
    "#         query_bit_string.append(bit_string)\n",
    "    \n",
    "#     return query_bit_string, phases_binary_expected\n",
    "\n",
    "def get_qpe_phases(measurement_counts, precision_qubits, items_to_keep = 1):\n",
    "    \n",
    "    \"\"\"\n",
    "Purpose: find the phases determined by the QPE algorithm\n",
    "Input: measurement_counts -> measurement results from device run\n",
    "       precision_qubits -> List of qubits corresponding to the precision qubits\n",
    "       items_to_keep -> number of items to return (topmost measurement counts for precision qubits)\n",
    "output: phases_decimal -> the phases measured\n",
    "        precision_results_dic -> contains the measurement outcomes (bit strings) and the corresponding counts\n",
    "\"\"\"\n",
    "    \n",
    "    n = len(precision_qubits)\n",
    "    bitstrings_precision_register = [\n",
    "        substring(key, precision_qubits) for key in measurement_counts.keys()\n",
    "    ]\n",
    "    bitstrings_precision_register_set = set(bitstrings_precision_register)\n",
    "    bitstrings_precision_register_list = list(bitstrings_precision_register_set)\n",
    "    precision_results_dic = {key: 0 for key in bitstrings_precision_register_list}\n",
    "\n",
    "    for key in measurement_counts.keys():\n",
    "        counts = measurement_counts[key]\n",
    "        count_key = substring(key, precision_qubits)\n",
    "        precision_results_dic[count_key] += counts\n",
    "        \n",
    "    c = Counter(precision_results_dic)\n",
    "    topmost = c.most_common(items_to_keep)\n",
    "    phases_decimal = [binaryToDecimal(item[0]) for item in topmost]\n",
    "    phases_actual = [(2 * np.pi * phase)/2 ** n for phase in phases_decimal] # extracts the actual phases\n",
    "\n",
    "    return phases_decimal, phases_actual, precision_results_dic\n",
    "\n",
    "\"\"\"\n",
    "Purpose: given a (nonhermitian) matrix, returns a hermitian matrix\n",
    "Input: L -> the matrix to be made hermitian\n",
    "Output: hermitian matrix using L^dag * L\n",
    "\"\"\"\n",
    "## Note: this is for calcuations with the QPE algorithm\n",
    "def make_hermitian(L):\n",
    "    \n",
    "    L_T = np.conj(L.T)\n",
    "    return np.dot(L_T, L)\n",
    "\n",
    "def post_process_results(results, precision_qubits):\n",
    "    # Dictionary for all the measurements and their number of counts\n",
    "    # Note: here, results is a result cache obtained from running the QPE algorithm ...\n",
    "    # ... on the constructed circuit\n",
    "    \n",
    "    num_precision_qubits = len(precision_qubits)\n",
    "    \n",
    "    counts = results.get_counts()\n",
    "    \n",
    "    measurement_counts = {}\n",
    "    \n",
    "    for key in counts.keys():\n",
    "        \n",
    "        reversed_key = key[::-1]\n",
    "        precision_key = reversed_key[:num_precision_qubits]\n",
    "        reversed_query_key = reversed_key[num_precision_qubits:]\n",
    "        query_key = reversed_query_key[::-1]\n",
    "        \n",
    "        new_key = precision_key + query_key\n",
    "        \n",
    "        measurement_counts[new_key] = counts[key]\n",
    "    \n",
    "    phases_decimal, phases_actual, precision_results_dic = get_qpe_phases(measurement_counts, precision_qubits, \\\n",
    "                                                                          2 ** num_precision_qubits) \n",
    "    \n",
    "    print('\\nPhases:', phases_decimal)\n",
    "    \n",
    "    eigenvalues = [np.exp(2 * np.pi * 1j * phase) for phase in phases_decimal]\n",
    "\n",
    "    qpe_cache = {\n",
    "            \"phases_decimal\": phases_decimal,\n",
    "            \"precision_results_dic\": precision_results_dic,\n",
    "            \"eigenvalues\": eigenvalues,\n",
    "            \"measurement_counts\": measurement_counts,\n",
    "        }\n",
    "    return qpe_cache\n",
    "\n",
    "def postprocess_mqpe_results(results, precision_number, query_number, precision_verification_factor, \\\n",
    "                            query_verification_factor, unanimous = False):\n",
    "    \n",
    "    num_precision_qubits = precision_number * precision_verification_factor\n",
    "    num_query_qubits = query_number * query_verification_factor\n",
    "    \n",
    "    counts = results.get_counts()\n",
    "    measurement_counts = {}\n",
    "    \n",
    "    for key in counts_key():\n",
    "        \n",
    "        keep = True\n",
    "        query_key = key[:num_query_qubits]\n",
    "        reversed_precision_key = key[num_query_qubits:]\n",
    "        precision_key = reversed_precision_key[::-1]\n",
    "        precision_key_verified = \"\"\n",
    "    \n",
    "        ## Key generation\n",
    "        for i in range(precision_number):\n",
    "            n0 = 0\n",
    "            n1 = 0\n",
    "            for j in range(precision_number):\n",
    "                if precision_key[i * precision_verification_factor + j] == \"0\":\n",
    "                    n0 = n0 + 1\n",
    "                else:\n",
    "                    n1 = n1 + 1\n",
    "            if n0 > n1:\n",
    "                precision_key_verified = precision_key_verified + \"0\"\n",
    "            else:\n",
    "                precision_key_verified = precision_key_verified + \"1\"\n",
    "            if unanimous and n0 != 0 and n1 != 0:\n",
    "                keep = False\n",
    "                \n",
    "        query_key_verified = \"\"\n",
    "        for i in range(query_number):\n",
    "            n0 = 0\n",
    "            n1 = 0\n",
    "            for j in range(query_number):\n",
    "                if query_key[i * query_verification_factor + j] == \"0\":\n",
    "                    n0 = n0 + 1\n",
    "                else:\n",
    "                    n1 = n1 + 1\n",
    "            if n0 > n1:\n",
    "                query_key_verified = query_key_verified + \"0\"\n",
    "            else:\n",
    "                query_key_verified = query_key_verified + \"1\"\n",
    "            if unanimous and n0 != 0 and n1 != 0:\n",
    "                keep = False\n",
    "        \n",
    "        new_key = precision_key_verified + query_key_verified\n",
    "        \n",
    "        if keep:\n",
    "            if new_key in measurement_counts:\n",
    "                measurement_counts[new_key] = measurement_counts[new_key] + counts[key]\n",
    "            else:\n",
    "                measurement_counts[new_key] = counts[key]\n",
    "    \n",
    "    return measurement_counts\n",
    "           \n",
    "def find_probability(eigenvector_raw):\n",
    "    \"\"\"\n",
    "    Purpose: Find the probability associated with each basis of an eigenvector\n",
    "    Input: eigenvector_raw -> Numpy array documenting the number of times each basis is detected within the eigenvector\n",
    "    Output: eigenvector_prob -> Numpy array documenting the probability of detecting each basis\n",
    "    \"\"\"\n",
    "    count_total = np.sum(eigenvector_raw)\n",
    "    eigenvector_prob = eigenvector_raw / count_total\n",
    "    \n",
    "    return eigenvector_prob\n",
    "\n",
    "def find_amplitude(eigenvector_prob):\n",
    "    \"\"\"\n",
    "    Purpose: Finding the probability amplitude of each basis using quantum mechanics\n",
    "    Input: eigenvector_prob -> Numpy array documenting the probability that each basis is measured\n",
    "    Output: eigenvector -> Numpy array representing the eigenvector\n",
    "    \"\"\"\n",
    "    eigenvector = np.sqrt(eigenvector_prob)\n",
    "    return eigenvector\n",
    "\n",
    "def normalize_eigenvector(vector):\n",
    "    \"\"\"\n",
    "    Purpose: Normalizes a vector such that its norm is 1\n",
    "    Input: vector -> The vector to be normalized\n",
    "    Output: vector -> The normalized vector\n",
    "    \"\"\"\n",
    "    L2 = np.sum(np.square(vector))\n",
    "    vector = vector / np.sqrt(L2)\n",
    "\n",
    "    return vector\n",
    "\n",
    "def find_eigenvector(zeromode_classic, result, num_precision_qubit, num_query_qubit, make_even = False, target_phase = 0):\n",
    "    \"\"\"\n",
    "    Purpose: Given the results, format the count of each basis\n",
    "    Input: result -> Dictionary containing the results from the ciruit\n",
    "           num_query_qubit -> number of target qubits used by the QPE circuit\n",
    "           num_precision_qubit -> number of precision qubits used by the QPE circuit\n",
    "           target_phase -> the phase whose eigenvector we are looking for. By default set to 0\n",
    "    Output: eigenvector -> the eigenvector of the phase\n",
    "            total_counts -> the number of iterations that yielded the desired phase\n",
    "    \"\"\"\n",
    "    # TODO: Generalize function to target alternative phases\n",
    "    total_counts = 0\n",
    "\n",
    "    counts = result['measurement_counts']\n",
    "\n",
    "    assert num_query_qubit < 10, \"Error: the code is only programmed for num_vec_bit < 10\"\n",
    "\n",
    "    eigenvector_raw = np.zeros((2**num_query_qubit, 1))\n",
    "\n",
    "    eigenvalue_string = ''\n",
    "\n",
    "    ## This part is only applicable if we are intersted in phase = 0\n",
    "    for i in range(num_precision_qubit):\n",
    "        eigenvalue_string = eigenvalue_string + '0'\n",
    "\n",
    "    for i in range(2**num_query_qubit):\n",
    "        bformat = '{0:0' + str(num_query_qubit) + 'b}'\n",
    "        eigenvector_string = eigenvalue_string + bformat.format(i)\n",
    "\n",
    "        if eigenvector_string in counts.keys():\n",
    "            eigenvector_raw[i] = counts[eigenvector_string]\n",
    "            total_counts = total_counts + counts[eigenvector_string]\n",
    "        else:\n",
    "            eigenvector_raw[i] = 0\n",
    "\n",
    "        if make_even and i%2 != 0:\n",
    "            eigenvector_raw[i] = 0\n",
    "\n",
    "    eigenvector_prob = find_probability(eigenvector_raw)\n",
    "\n",
    "    eigenvector = find_amplitude(eigenvector_prob)\n",
    "\n",
    "    return eigenvector, eigenvector_prob, total_counts\n",
    "\n",
    "def find_eigenvector_with_bucket(result, num_precision_qubit, num_query_qubit, bucket, make_even = False, target_phase = 0):\n",
    "    \"\"\"\n",
    "    Purpose: Given the results, format the count of each basis\n",
    "    Input: result -> Dictionary containing the results from the ciruit\n",
    "           num_query_qubit -> number of target qubits used by the QPE circuit\n",
    "           num_precision_qubit -> number of precision qubits used by the QPE circuit\n",
    "           target_phase -> the phase whose eigenvector we are looking for. By default set to 0\n",
    "    Output: eigenvector -> the eigenvector of the phase\n",
    "            total_counts -> the number of iterations that yielded the desired phase\n",
    "    \"\"\"\n",
    "    # TODO: Generalize function to target alternative phases\n",
    "    total_counts = 0\n",
    "\n",
    "    counts = result['measurement_counts']\n",
    "\n",
    "    assert bucket.ndim == num_query_qubit, \"Error: bucket dimension is incorrect\"\n",
    "    assert num_query_qubit < 10, \"Error: the code is only programmed for num_vec_bit < 10\"\n",
    "\n",
    "    eigenvector_raw = np.zeros((2**num_query_qubit, 1))\n",
    "    eigenvalue_string = ''\n",
    "    reshaped = np.reshape(bucket, (2 ** num_query_qubit, ))\n",
    "\n",
    "    ## This part is only applicable if we are intersted in phase = 0\n",
    "    for i in range(num_precision_qubit):\n",
    "        eigenvalue_string = eigenvalue_string + '0'\n",
    "\n",
    "    for i in range(2**num_query_qubit):\n",
    "        bformat = '{0:0' + str(num_query_qubit) + 'b}'\n",
    "        eigenvector_string = eigenvalue_string + bformat.format(i)\n",
    "\n",
    "        if eigenvector_string in counts.keys():\n",
    "            eigenvector_raw[i] = counts[eigenvector_string]\n",
    "            total_counts = total_counts + counts[eigenvector_string]\n",
    "        else:\n",
    "            eigenvector_raw[i] = 0\n",
    "\n",
    "        if make_even and i%2 != 0:\n",
    "            eigenvector_raw[i] = 0\n",
    "\n",
    "        reshaped[i] = reshaped[i] + eigenvector_raw[i]\n",
    "\n",
    "    bucket = np.reshape(reshaped, bucket.shape)\n",
    "\n",
    "    eigenvector_prob = find_probability(eigenvector_raw)\n",
    "\n",
    "    eigenvector = find_amplitude(eigenvector_prob)\n",
    "\n",
    "    return eigenvector, total_counts\n",
    "\n",
    "def approximate_tensor_product(bucket):\n",
    "    total = np.sum(bucket)\n",
    "    num_query_qubit = bucket.ndim\n",
    "    angles = np.zeros((num_query_qubit, ))\n",
    "\n",
    "    angles[0] = np.sum(bucket[0, :, :, :])\n",
    "    angles[1] = np.sum(bucket[:, 0, :, :])\n",
    "    angles[2] = np.sum(bucket[:, :, 0, :])\n",
    "    angles[3] = np.sum(bucket[:, :, :, 0])\n",
    "\n",
    "    angles = angles / total\n",
    "    angles = np.sqrt(angles)\n",
    "    angles = np.arccos(angles)\n",
    "\n",
    "    return angles\n",
    "\n",
    "def get_register_counts(result_cache, num_precision_qubits):\n",
    "    counts = result_cache['measurement_counts']\n",
    "    phase_counts = {}\n",
    "    eigenvector_counts = {}\n",
    "\n",
    "    for key in counts.keys():\n",
    "        phase_measurement = key[:num_precision_qubits]\n",
    "        num_counts = counts[key]\n",
    "        if phase_measurement in phase_counts:\n",
    "            phase_counts[phase_measurement] = phase_counts[phase_measurement] + num_counts\n",
    "        else:\n",
    "            phase_counts[phase_measurement] = num_counts\n",
    "\n",
    "        eigenvector_measurement = key[num_precision_qubits:]\n",
    "        if eigenvector_measurement in eigenvector_counts:\n",
    "            eigenvector_counts[eigenvector_measurement] = eigenvector_counts[eigenvector_measurement] + num_counts\n",
    "        else:\n",
    "            eigenvector_counts[eigenvector_measurement] = num_counts\n",
    "    return phase_counts, eigenvector_counts"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40ed516b",
   "metadata": {},
   "source": [
    "## Computing zeromode overlap, fidelity, and cosine similarity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2a5ae114",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Computing the eigenvalue fidelity\n",
    "\n",
    "def fidelity_check(qeigvals, aeigvals, runit): # runit -> round off to a certain precision\n",
    "    qeigvals.sort()\n",
    "    aeigvals.sort()\n",
    "    qmat = np.round(qeigvals, decimals = runit)\n",
    "    amat = np.round(aeigvals, decimals = runit) \n",
    "    \n",
    "#     print('\\n\\nResults:')\n",
    "#     print('Actual Eigen Values:', amat)\n",
    "#     print('Quantum Eigen Values:', qmat)\n",
    "    \n",
    "    qmat = np.real(qmat) # real part of the quantum eigenvalues\n",
    "    amat = np.real(amat) # real part of the classical eigenvalues\n",
    "    \n",
    "    cosine_similarity = 1 - spat.distance.cosine(qmat, amat)\n",
    "    \n",
    "    return cosine_similarity\n",
    "\n",
    "def get_correlation(zeromode_classic, zeromode_quantum, runit): \n",
    "    # Function to compute the correlation between the classical and QPE zeromodes\n",
    "    # runit -> round off to a certain precision\n",
    "    \n",
    "    zeromode_classic = np.round(zeromode_classic, decimals = runit)\n",
    "    zeromode_quantum = np.round(zeromode_quantum, decimals = runit)\n",
    "    \n",
    "    # Flatten the 2D arrays\n",
    "    zeromode_classic = np.reshape(zeromode_classic, len(zeromode_classic))\n",
    "    zeromode_quantum = np.reshape(zeromode_quantum, len(zeromode_quantum))\n",
    "    \n",
    "#     # Convert the zeromode arrays to a list\n",
    "#     zeromode_classic = zeromode_classic.tolist()\n",
    "#     zeromode_quantum = zeromode_quantum.tolist()\n",
    "    \n",
    "    # Take the real parts\n",
    "    zeromode_quantum = np.real(zeromode_quantum)\n",
    "    zeromode_classic = np.real(zeromode_classic)\n",
    "    \n",
    "    # Compute the correlation\n",
    "    correlation_zeromode = np.corrcoef(zeromode_classic, zeromode_quantum)[0, 1]\n",
    "    \n",
    "    return correlation_zeromode\n",
    "\n",
    "def get_overlap(zeromode_classic, zeromode_quantum, runit): \n",
    "    # Function to compute the overlap between the classical and VQSVD zeromodes\n",
    "    \n",
    "    zeromode_classic = np.round(zeromode_classic, decimals = runit)\n",
    "    zeromode_quantum = np.round(zeromode_quantum, decimals = runit)\n",
    "    \n",
    "    zeromode_qpe_transpose = np.real(np.transpose(zeromode_quantum))\n",
    "    overlap = np.dot(zeromode_qpe_transpose, zeromode_classic)[0, 0]\n",
    "    \n",
    "    return overlap\n",
    "\n",
    "def get_similarity(zeromode_classic, zeromode_quantum, runit):\n",
    "    # Function to compute the cosine similarity between the classical and QPE zeromodes\n",
    "    \n",
    "    zeromode_classic = np.round(zeromode_classic, decimals = runit)\n",
    "    zeromode_quantum = np.round(zeromode_quantum, decimals = runit)\n",
    "    \n",
    "    # Flatten the 2D arrays\n",
    "    zeromode_classic = np.reshape(zeromode_classic, len(zeromode_classic))\n",
    "    zeromode_quantum = np.reshape(zeromode_quantum, len(zeromode_quantum))\n",
    "    \n",
    "#     # Convert the zeromode arrays to a list\n",
    "#     zeromode_classic = zeromode_classic.tolist()\n",
    "#     zeromode_quantum = zeromode_quantum.tolist()\n",
    "    \n",
    "#     # Take the real parts\n",
    "#     zeromode_quantum = np.real(zeromode_quantum)\n",
    "#     zeromode_classic = np.real(zeromode_classic)\n",
    "    \n",
    "    # Converting to list\n",
    "    zeromode_classic.tolist()\n",
    "    zeromode_quantum.tolist()\n",
    "    \n",
    "    cosine_similarity_score = 1 - spat.distance.cosine(zeromode_classic, zeromode_quantum)\n",
    "    \n",
    "    return cosine_similarity_score"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f50bbf73",
   "metadata": {},
   "source": [
    "## Computing the Euclidean distance between classical and quantum zeromodes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1076068c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def euclidean_distance(zeromode_classic, zeromode_qpe, runit):\n",
    "    # Function to compute the Euclidean distance between the classical and VQDSVD zeromodes\n",
    "    \n",
    "    # Rounding off\n",
    "    zeromode_classic = np.round(zeromode_classic, decimals = runit)\n",
    "    zeromode_qpe = np.round(zeromode_qpe, decimals = runit)\n",
    "    \n",
    "    # Convert zeromodes to lists\n",
    "    zeromode_classic.tolist()\n",
    "    zeromode_qpe.tolist()\n",
    "    \n",
    "    assert len(zeromode_classic) == len(zeromode_qpe), \"The zeromodes must be of equal length\"\n",
    "    \n",
    "    # Compute the Euclidean distance\n",
    "    n = len(zeromode_classic)\n",
    "    sum_vec = 0\n",
    "    \n",
    "    for i in range(n):\n",
    "        sum_vec += (zeromode_classic[i] - zeromode_qpe[i]) ** 2\n",
    "        \n",
    "    return np.sqrt(sum_vec)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6bb8777",
   "metadata": {},
   "source": [
    "## QPE implementation with and without DD (and noiseless simulations)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "94ad1a6a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def qpe_implementation_DD(A, U, zeromode_classic, num_precision_qubits, num_query_qubits, dimension, sequence, \\\n",
    "                          shots, optimization_level, runit, noise, use_DD, \\\n",
    "                          control_unitary, use_Montreal = True, make_even = True):\n",
    "    \n",
    "    # Note: use_DD -> if True, apply DD to the circuit\n",
    "    # use_Montreal -> if True, run the circuit on the FakeMontreal backend; else, use QASM simulator\n",
    "    # make_even -> if True, set all odd orders of the Hermite polynomials to zero\n",
    "    # runit -> rounding off precision\n",
    "    \n",
    "     # Get the arrays containing all precision and query qubits\n",
    "    precision_qubits, query_qubits = get_qubits(num_precision_qubits, num_query_qubits)\n",
    "    total_qubits = num_precision_qubits + num_query_qubits\n",
    "    \n",
    "    # Construct the circuit \n",
    "    qr = QuantumRegister(total_qubits)\n",
    "    cr = ClassicalRegister(total_qubits)\n",
    "    circuit = QuantumCircuit(qr, cr)\n",
    "    \n",
    "    # Apply QPE to the circuit\n",
    "    qpe_without_DD(circuit, precision_qubits, query_qubits, U, angles = None, control_unitary = True, \\\n",
    "                   with_inverse_barriers = True, measure = True)\n",
    "    \n",
    "    # Get the backend\n",
    "    if use_Montreal: # if True, use the FakeMumbai() backend\n",
    "        backend = provider.get_backend('ibm_brisbane')\n",
    "        \n",
    "        # Get instruction durations from the backend\n",
    "        durations = InstructionDurations.from_backend(backend)\n",
    "        \n",
    "        # Add durations of Y and Z gates being used for DD \n",
    "        bconf = backend.configuration()\n",
    "        \n",
    "        for i in range(bconf.num_qubits):\n",
    "            x_duration = durations.get('x', i)\n",
    "            \n",
    "            durations.update(InstructionDurations(\n",
    "            [('y', i, x_duration)]\n",
    "            ))\n",
    "            \n",
    "            durations.update(InstructionDurations(\n",
    "            [('z', i, x_duration)]\n",
    "            ))\n",
    "\n",
    "            durations.update(InstructionDurations(\n",
    "            [('rx', i, x_duration)]\n",
    "            ))\n",
    "\n",
    "            durations.update(InstructionDurations(\n",
    "            [('ry', i, x_duration)]\n",
    "            ))\n",
    "            \n",
    "            durations.update(InstructionDurations(\n",
    "            [('rz', i, x_duration)]\n",
    "            ))\n",
    "    else:\n",
    "        backend = Aer.get_backend('qasm_simulator')\n",
    "            \n",
    "#     ## Apply error mitigation to the circuit\n",
    "#     # Prepare the calibration circuits\n",
    "#     calibration_circuits, state_labels = complete_meas_cal(qubit_list = precision_qubits, qr = qr)\n",
    "    \n",
    "#     # Execute calibration circuits\n",
    "#     calibration_job = execute(calibration_circuits, backend = backend, shots = shots, \\\n",
    "#                               optimization_level = optimization_level)\n",
    "#     calibration_results = calibration_job.result()\n",
    "    \n",
    "#     # Obtain the calibration matrix with the noise model\n",
    "#     meas_fitter = CompleteMeasFitter(calibration_results, state_labels, qubit_list = precision_qubits)\n",
    "           \n",
    "    # Application of DD to the circuit\n",
    "    if noise: # if True, run a simulation with noise\n",
    "        if use_DD:\n",
    "            # Insert the Hahn-X sequence\n",
    "            if sequence == \"hahn_x\":\n",
    "                pm = pm_hahn_X(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the Hahn-Y sequence\n",
    "            elif sequence == \"hahn_y\":\n",
    "                pm = pm_hahn_Y(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the CP sequence\n",
    "            elif sequence == \"CP\":\n",
    "                pm = pm_CP_DD(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the CPMG sequence\n",
    "            elif sequence == \"CPMG\":\n",
    "                pm = pm_CPMG_DD(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the universal XYXY sequence\n",
    "            elif sequence == \"XYXY\":\n",
    "                pm = pm_XYXY_DD(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the universal YZYZ sequence\n",
    "            elif sequence == \"YZYZ\":\n",
    "                pm = pm_YZYZ_DD(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the universal XZXZ sequence\n",
    "            elif sequence == \"XZXZ\":\n",
    "                pm = pm_XZXZ_DD(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the CDD sequence of order 2\n",
    "            elif sequence == \"CDD\":\n",
    "                pm = pm_CDD(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the XY8 sequence\n",
    "            elif sequence == \"XY8\":\n",
    "                pm = pm_XY8_DD(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the XY16 sequence\n",
    "            elif sequence == \"XY16\":\n",
    "                pm = pm_XY16_DD(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the Uhrig-X sequence \n",
    "            elif sequence == \"uhrig_x\":\n",
    "                pm = pm_uhrig_x(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the Uhrig-Y sequence\n",
    "            elif sequence == \"uhrig_y\":\n",
    "                pm = pm_uhrig_y(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "                \n",
    "            # Else, insert the KDD sequence\n",
    "            elif sequence == \"KDD\":\n",
    "                pm = pm_KDD(durations)\n",
    "                \n",
    "                # Get the device characteristics\n",
    "                noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "                coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "                basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "                # Initialize the simulator\n",
    "                backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                       basis_gates = basis_gates)\n",
    "            \n",
    "                # Transpile the circuit and unroll to basis gates\n",
    "                transpiled_circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                               seed_transpiler = 1)\n",
    "                qpe_transpile = pm.run(transpiled_circuit)\n",
    "                qpe_transpile_base = translate_circuit_to_basis(qpe_transpile, bconf)\n",
    "            \n",
    "                # Execute the circuit on the backend\n",
    "                task = backend.run(qpe_transpile_base, shots = shots)\n",
    "            \n",
    "                # Obtain all results\n",
    "                result = task.result()\n",
    "                counts = result.get_counts()\n",
    "                time = result.time_taken \n",
    "            \n",
    "        # Else, no DD is applied to the circuit\n",
    "        else:\n",
    "            # Get the device characteristics\n",
    "            noise_model = NoiseModel.from_backend(backend) # get the noise model\n",
    "            coupling_map = backend.configuration().coupling_map # get the coupling map\n",
    "            basis_gates = noise_model.basis_gates # get the basis gates for the noise model\n",
    "            \n",
    "            # Initialize the simulator\n",
    "            backend = AerSimulator(noise_model = noise_model, coupling_map = coupling_map, \\\n",
    "                                   basis_gates = basis_gates)\n",
    "        \n",
    "            # Transpile and execute the circuit on the backend\n",
    "            circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                                seed_transpiler = 1)\n",
    "            task = backend.run(circuit, shots = shots)\n",
    "        \n",
    "            # Obtain all results\n",
    "            result = task.result()\n",
    "            counts = result.get_counts()\n",
    "            time = result.time_taken\n",
    "        \n",
    "    # Else, run a noiseless simulation for QPE \n",
    "    else:\n",
    "        # Transpile and execute the circuit on the backend\n",
    "        circuit = transpile(circuit, backend = backend, optimization_level = optimization_level, \\\n",
    "                            seed_transpiler = 1)\n",
    "        task = backend.run(circuit, shots = shots)\n",
    "        \n",
    "        # Obtain all results\n",
    "        result = task.result()\n",
    "        counts = result.get_counts()\n",
    "        time = result.time_taken\n",
    "        \n",
    "    ## Obtain quantum results\n",
    "    # Get the QPE phases in decimal format\n",
    "    phases_decimal, phases_actual, _ = get_qpe_phases(counts, precision_qubits, dimension) # as the measurement outcomes with the ... \n",
    "    # ... highest occurrences are the most dominant eigenvectors (corresponding to U)\n",
    "\n",
    "    eigenvalues = [np.exp(1j * phase) for phase in phases_actual] # eigenvalues of the unitary matrix\n",
    "    \n",
    "    phases_qpe = np.array([])\n",
    "    \n",
    "    # Computing phases in Euler representation\n",
    "    qpe_cache = post_process_results(result, precision_qubits)\n",
    "    qpe_eigenvalues = qpe_cache['eigenvalues']\n",
    "    \n",
    "    for z in qpe_eigenvalues:\n",
    "        a, phase = euler_representation(z)\n",
    "        phases_qpe = np.append(phases_qpe, [phase])\n",
    "        \n",
    "    # Computing the eigenvalues of the Hermitian matrix\n",
    "    hermitian_eigenvalues = [(2 * np.pi * phase) for phase in phases_decimal] \n",
    "    # Reason: U = exp(iH), thus [U, H] = 0 -> U and H have simultaneous eigenvectors. \n",
    "    # Since U |u> = exp(2 \\pi i \\theta) |u>, and exp(iH) |u> = exp(iE) |u>, we have E = 2 \\pi \\theta. \n",
    "    \n",
    "    ## Compute the zeromode using singular value decomposition\n",
    "    # Identify the minimum eigenvalue coming from QPE\n",
    "    min_idx = np.argmin(np.real(eigenvalues) ** 2)\n",
    "    min_eigenvalue = eigenvalues[min_idx]\n",
    "    \n",
    "    # Use SVD to compute the corresponding zeromode\n",
    "    diag_matrix = U - min_eigenvalue * np.identity(dimension)\n",
    "    _, _, solutions = la.svd(diag_matrix.conj().T)\n",
    "    zeromode_qpe = solutions[-1, :] # extract the relevant solution\n",
    "#     zeromode_qpe = -zeromode_qpe # per the SVD convention in Python\n",
    "    \n",
    "    # Reshape the zeromode as a column vector for better visualization and/or comparison\n",
    "    zeromode_qpe = np.reshape(zeromode_qpe, (zeromode_qpe.shape[0], 1))\n",
    "        \n",
    "    # Identifying the zeromode and estimating the hit rate (with the wrong signs for the amplitudes, though)\n",
    "    zeromode_qpe_sign, zeromode_prob, n_hit = find_eigenvector(zeromode_classic, qpe_cache, num_precision_qubits, \\\n",
    "                                                               num_query_qubits, make_even = make_even)\n",
    "    hit_rate = n_hit/shots\n",
    "    \n",
    "    # Computing the overlap between the classical and QPE zeromode\n",
    "    if len(zeromode_qpe_sign) == len(zeromode_classic):\n",
    "        zeromode_qpe_transpose = np.real(np.transpose(zeromode_qpe_sign))\n",
    "        overlap = np.dot(zeromode_qpe_transpose, zeromode_classic)[0, 0]\n",
    "        \n",
    "    # Compute the similarity between the classical zeromode and the one obtained using SVD \n",
    "    similarity_score = get_similarity(zeromode_classic, zeromode_qpe, runit = runit)\n",
    "\n",
    "    return U, result, counts, time, phases_actual, eigenvalues, qpe_eigenvalues, hermitian_eigenvalues, min_eigenvalue, phases_qpe, zeromode_qpe, zeromode_qpe_sign, zeromode_prob, hit_rate, overlap, similarity_score "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3f9ccdd",
   "metadata": {},
   "source": [
    "## Error analysis (using VQSVD)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "aac6f112",
   "metadata": {},
   "outputs": [],
   "source": [
    "def error_analysis(U, min_eigenvalue, U_learned, V_dagger_learned, singular_value_list, rank):\n",
    "    # Function to compute the variational Frobenius-norm (for error analysis)\n",
    "    \n",
    "    # Initialization\n",
    "    err_subfull, err_local, err_SVD = [], [], []\n",
    "    \n",
    "    # Perform classical SVD\n",
    "    matrix = U - min_eigenvalue * np.identity(rank)\n",
    "    U_matrix, D, V_dagger = la.svd(matrix, full_matrices = True)\n",
    "    singular_values = singular_value_list[-1]\n",
    "    \n",
    "    # Get the copy of the matrix to be decomposed\n",
    "    U_err = np.copy(matrix)\n",
    "    \n",
    "    # Compute the Frobenius norm\n",
    "    for i in range(rank):\n",
    "        lowrank_mat = np.matrix(U_matrix[:, :i]) * np.diag(D[:i])* np.matrix(V_dagger[:i, :])\n",
    "        recons_mat = np.matrix(U_learned[:, :i]) * np.diag(singular_values[:i])* np.matrix(V_dagger_learned[:i, :])\n",
    "        err_local.append(norm(lowrank_mat - recons_mat)) \n",
    "        err_subfull.append(norm(U_err - recons_mat))\n",
    "        err_SVD.append(norm(U_err - lowrank_mat))\n",
    "        \n",
    "    # Visualization\n",
    "    fig, ax = plt.subplots(dpi = 600)\n",
    "    ax.plot(list(range(1, rank + 1)), err_subfull, \"o-.\", \n",
    "            label = 'Reconstruction via VQSVD')\n",
    "    ax.plot(list(range(1, rank + 1)), err_SVD, \"^--\", \n",
    "            label = 'Reconstruction via classical SVD')\n",
    "    plt.xlabel('Singular values used (rank)', fontsize = 17)\n",
    "    plt.ylabel('Norm distance', fontsize = 17)\n",
    "    leg = plt.legend(frameon = True)\n",
    "    leg.get_frame().set_edgecolor('k')\n",
    "    plt.grid(True)\n",
    "    \n",
    "    ## Plotting norm distance difference\n",
    "    # Get the difference\n",
    "    err_diff = [(err_subfull[i] - err_SVD[i]) for i in range(len(err_subfull))]\n",
    "\n",
    "    # Visualization\n",
    "    plt.figure(dpi = 150)\n",
    "    plt.xlabel(\"Singular values used (rank)\", fontsize = 14)\n",
    "    plt.ylabel(\"Norm distance difference\", fontsize = 14)\n",
    "\n",
    "    plt.plot(list(range(1, rank + 1)), err_diff, '^--')\n",
    "    plt.show()\n",
    "        \n",
    "    return err_subfull, err_local, err_SVD"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37991fd1",
   "metadata": {},
   "source": [
    "## Computing the steady-state PDF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f3434de2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_pdf(n, x, dx, L, shift, zeromode_qpe, normalize = True, make_even = False):\n",
    "    # Function to construct the ground state PDF using the VQSVD zeromode\n",
    "    \n",
    "    if not make_even:\n",
    "        eigenvector = zeromode_qpe\n",
    "    else:\n",
    "        eigenvector_old = zeromode_qpe\n",
    "        eigenvector = np.zeros(n + 1)\n",
    "        for i in range(len(eigenvector_old)):\n",
    "            eigenvector[2*i] = eigenvector_old[i]\n",
    "            \n",
    "    x0 = x - shift\n",
    "    \n",
    "    # Computing the PDF\n",
    "    y = np.zeros(len(x0))\n",
    "\n",
    "    for i in range(len(x0)):\n",
    "        states = state_n(nmax, x0[i], L)\n",
    "        y[i] += (np.dot(states, eigenvector))\n",
    "    \n",
    "    if normalize:\n",
    "        y = normalize_probability(y, dx)\n",
    "\n",
    "    return x0, y"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad51cb40",
   "metadata": {},
   "source": [
    "## Computing expectation values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "eea8a388",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_expectation(x, y):\n",
    "    # Function to compute the expectation value of x and using the estimated ground state PDF\n",
    "    # Note: Ground state PDF already normalized\n",
    "    \n",
    "    # Calculate expectation values\n",
    "    expectation_x, expectation_x_square = 0, 0\n",
    "    \n",
    "    for x_val, pdf in zip(x, y):\n",
    "        expectation_x += x_val * pdf\n",
    "        expectation_x_square += x_val**2 * pdf\n",
    "        \n",
    "    return expectation_x, expectation_x_square\n",
    "\n",
    "def expect_verify(x, y, n):\n",
    "    # Function to verify if all odd order moments of the ground state PDF (symmetric about 0) vanish\n",
    "    \n",
    "    # Calculate expectation values\n",
    "    expectation_val = 0\n",
    "    \n",
    "    for x_val, pdf in zip(x, y):\n",
    "        expectation_val += x_val**n * pdf\n",
    "        \n",
    "    if n % 2 != 0:\n",
    "        if expectation_val < 1e-10: # error tolerance applied is 1e-10\n",
    "            return True\n",
    "        else:\n",
    "            return False\n",
    "    else:\n",
    "        return # else, if n is even, the function returns None"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a1ab9a0",
   "metadata": {},
   "source": [
    "## Computing PDF moments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "362f5fe6",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_moments(y, moments):\n",
    "    # Function to compute the moments of the ground state PDF (about the mean)\n",
    "    \n",
    "    # Initialization\n",
    "    moment_vals = []\n",
    "    \n",
    "    for i in range(len(moments)):\n",
    "        moment_val = moment(y, moments[i])\n",
    "        moment_vals.append(moment_val)\n",
    "        \n",
    "    return moment_vals"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03c64ca1",
   "metadata": {},
   "source": [
    "## Defining a cutoff and generating plots accordingly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "79b6ad19",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cutoff_graph(x, y, y_cutoff):\n",
    "    # Function to obtain the bounded x and y values (PDF on the log scale)\n",
    "    \n",
    "    x_values = [x_val for x_val, y_val in zip(x, y) if y_val >= y_cutoff]\n",
    "    y_values = [y_val for y_val in y if y_val >= y_cutoff]\n",
    "    \n",
    "    return x_values, y_values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0abee35d",
   "metadata": {},
   "source": [
    "## Computing PDF maximas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a7a7c59b",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_maxima(x, y):\n",
    "    # Function to determine the maximas in the steady-state PDFs \n",
    "    \n",
    "    # Extract the positive side of the PDF\n",
    "    x_positive = [x_val for x_val in x if x_val >= 0]\n",
    "    y_positive = [y_val for x_val, y_val in zip(x, y) if x_val >= 0]\n",
    "    \n",
    "    # Determine the maximum\n",
    "    max_idx = np.argmax(y_positive)\n",
    "    x_max = x_positive[max_idx]\n",
    "    \n",
    "    return x_max"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fec73fe",
   "metadata": {},
   "source": [
    "# Classical and quantum analysis\n",
    "\n",
    "## Defining model parameters and computing the exact analytical solution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f4c80748",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Defining parameters\n",
    "nmax = 15\n",
    "dx = 0.01\n",
    "a = -5\n",
    "gamma = 2\n",
    "c = 3\n",
    "L = 2\n",
    "shift = 0\n",
    "\n",
    "#3, 5, 1, 1\n",
    "x = np.linspace(-10, 10, int((20)/dx))\n",
    "y = perturbed_ornstein_uhlenbeck(x, a = a, gamma = gamma, c = c, shift = shift)\n",
    "\n",
    "## Finding the zeromode through direct integration\n",
    "cache_projection = integrate_eigenvector(x, y, nmax, L)\n",
    "x_projection, y_projection = reconstruct_eigenvector(cache_projection)\n",
    "\n",
    "## Finding the zeromode through diagonalization\n",
    "op_nonhermitian = create_operator_perturbed(nmax, L, a, c, gamma)\n",
    "only_even = True\n",
    "\n",
    "cache_diagonalization = find_zeromode(op_nonhermitian, nmax, x, dx, L, which = \"single\", only_even = only_even)\n",
    "x_diagonalization, y_diagonalization = reconstruct_eigenvector(cache_diagonalization, only_even = only_even)\n",
    "\n",
    "## Moments array\n",
    "moments = [1, 2, 3, 4, 5] # to compute the moments of the distribution(s)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6165344e",
   "metadata": {},
   "source": [
    "## Analysis of the diagonalization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1f91f38e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The initial_state is: \n",
      "[1. 0. 0. 0. 0. 0. 0. 0.]\n",
      "\n",
      "The coefficient expansion is: \n",
      "[ 1.98960038e-05  7.07119051e-04 -7.72751374e-03  3.60311205e-02\n",
      "  1.28555530e-01 -4.29357506e-01  4.74477568e-01 -7.56728609e-01]\n",
      "\n",
      "The normalized coefficient expansion is: \n",
      "[ 1.98960038e-05  7.07119051e-04 -7.72751374e-03  3.60311205e-02\n",
      "  1.28555530e-01 -4.29357506e-01  4.74477568e-01 -7.56728609e-01]\n",
      "\n",
      "The reconstructed vector is: \n",
      "[ 1.00000000e+00 -9.16107468e-15 -2.77555756e-15  4.44089210e-16\n",
      "  1.05471187e-15  5.44703171e-16  2.08166817e-17 -1.89084859e-16]\n",
      "\n",
      "The probability of collapsing into each eigenvector is: \n",
      "[3.95850968e-10 5.00017353e-07 5.97144685e-05 1.29824164e-03\n",
      " 1.65265243e-02 1.84347868e-01 2.25128963e-01 5.72638188e-01]\n",
      "\n",
      "The probability of collapsing into the zeromode is: \n",
      "0.22512896288738937\n",
      "\n"
     ]
    }
   ],
   "source": [
    "num_basis = cache_diagonalization['P'].shape[1]\n",
    "initial = np.zeros((num_basis, ))\n",
    "initial[0] = 1\n",
    "index = cache_diagonalization['index']\n",
    "\n",
    "probability_zeromode, probability = analyze_collapse(initial, cache_diagonalization['P'], index)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4c1a227",
   "metadata": {},
   "source": [
    "## Loading the FPE operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "524c9f7a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 6.25455376e-01+0.20987536j  5.35625725e-01-0.09656813j\n",
      "  -4.10829682e-02-0.09722243j -3.92089663e-01+0.0525435j\n",
      "  -2.75280537e-01+0.12435975j -3.97366009e-02+0.08133744j\n",
      "   3.11286566e-02+0.02215148j  3.05391652e-04+0.0017818j ]\n",
      " [ 5.35625725e-01-0.09656813j -1.53348681e-02+0.03039333j\n",
      "   3.22319431e-01+0.13265506j  5.56422885e-01-0.14515154j\n",
      "   3.19709839e-02-0.26324632j -3.21918249e-01-0.19186183j\n",
      "  -1.88269518e-01-0.06489783j -2.83590382e-03-0.00546974j]\n",
      " [-4.10829682e-02-0.09722243j  3.22319431e-01+0.13265506j\n",
      "   6.93668748e-01-0.08985757j  2.73501159e-02+0.08108148j\n",
      "   3.05278135e-01+0.01709207j  4.90234686e-01+0.10397248j\n",
      "   1.37075334e-01+0.05490283j -6.29434033e-02-0.02016967j]\n",
      " [-3.92089663e-01+0.0525435j   5.56422885e-01-0.14515154j\n",
      "   2.73501159e-02+0.08108148j  3.82159248e-01+0.013039j\n",
      "  -6.04077151e-02+0.36360929j -3.75125593e-01-0.01282998j\n",
      "   1.43286582e-01-0.00609531j  2.17473136e-01+0.12117817j]\n",
      " [-2.75280537e-01+0.12435975j  3.19709839e-02-0.26324632j\n",
      "   3.05278135e-01+0.01709207j -6.04077151e-02+0.36360929j\n",
      "  -3.66316072e-01-0.18987482j -1.08507294e-01+0.14420928j\n",
      "  -5.56001952e-01-0.02517785j -2.18610703e-01-0.22071253j]\n",
      " [-3.97366009e-02+0.08133744j -3.21918249e-01-0.19186183j\n",
      "   4.90234686e-01+0.10397248j -3.75125593e-01-0.01282998j\n",
      "  -1.08507294e-01+0.14420928j -3.39111112e-01-0.32804865j\n",
      "   3.46969092e-01-0.01504519j -9.31832517e-02+0.27360432j]\n",
      " [ 3.11286566e-02+0.02215148j -1.88269518e-01-0.06489783j\n",
      "   1.37075334e-01+0.05490283j  1.43286582e-01-0.00609531j\n",
      "  -5.56001952e-01-0.02517785j  3.46969092e-01-0.01504519j\n",
      "   1.80543474e-01-0.11457941j  6.46525572e-01-0.14968403j]\n",
      " [ 3.05391652e-04+0.0017818j  -2.83590382e-03-0.00546974j\n",
      "  -6.29434033e-02-0.02016967j  2.17473136e-01+0.12117817j\n",
      "  -2.18610703e-01-0.22071253j -9.31832517e-02+0.27360432j\n",
      "   6.46525572e-01-0.14968403j -4.55881561e-01-0.32455453j]]\n",
      "8\n"
     ]
    }
   ],
   "source": [
    "matrix = cache_diagonalization['operator']\n",
    "\n",
    "# Defining the matrix to be diagonalized\n",
    "U, n_query_qubits, dimension = get_unitary(matrix, add_half = False)\n",
    "\n",
    "# Printing out the unitary matrix\n",
    "print(U)\n",
    "print(dimension)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bcb15ea0",
   "metadata": {},
   "source": [
    "## Exact diagonalization of the unitary matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "57fe7913",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the available eigenvalues are: \n",
      "[-0.80755541+0.58979171j -0.88033201-0.47435803j -0.55521883-0.83170431j\n",
      "  0.98211763+0.18826832j  0.99998353+0.00573967j  0.96739561-0.25327009j\n",
      "  0.99713211-0.0756806j  -0.99833939+0.05760604j]\n",
      "\n",
      "the phases are: \n",
      "1.000000000000352 * exp(i *-0.6308008883187063 )\n",
      "\n",
      "1.0000000000000373 * exp(i *0.49423465673364647 )\n",
      "\n",
      "0.9999999999989101 * exp(i *0.9821702790629444 )\n",
      "\n",
      "0.9999999999998657 * exp(i *0.18939863881887373 )\n",
      "\n",
      "0.9999999999998437 * exp(i *0.005739704395134133 )\n",
      "\n",
      "0.999999999999657 * exp(i *-0.2560590721955177 )\n",
      "\n",
      "0.9999999999997508 * exp(i *-0.07575303148928036 )\n",
      "\n",
      "0.9999999999997154 * exp(i *-0.0576379453727761 )\n",
      "\n",
      "The calculated phases are:\n",
      "[-0.63080089  0.49423466  0.98217028  0.18939864  0.0057397  -0.25605907\n",
      " -0.07575303 -0.05763795]\n",
      "\n",
      "The minimum eigenvalue located is: \n",
      "(0.9999835279417936+0.005739672880183965j)\n",
      "\n",
      "The minimum zeromode located is: \n",
      "[[ 0.47447757]\n",
      " [ 0.60870008]\n",
      " [ 0.55925952]\n",
      " [ 0.29602839]\n",
      " [ 0.03873082]\n",
      " [-0.04625392]\n",
      " [-0.01489072]\n",
      " [ 0.00948653]]\n",
      "The initial_state is: \n",
      "[1. 0. 0. 0. 0. 0. 0. 0.]\n",
      "\n",
      "The coefficient expansion is: \n",
      "[-4.29357506e-01 -1.28555530e-01  7.07119051e-04  7.56728609e-01\n",
      "  4.74477568e-01 -7.72751374e-03  3.60311205e-02  1.98960038e-05]\n",
      "\n",
      "The normalized coefficient expansion is: \n",
      "[-4.29357506e-01 -1.28555530e-01  7.07119051e-04  7.56728609e-01\n",
      "  4.74477568e-01 -7.72751374e-03  3.60311205e-02  1.98960038e-05]\n",
      "\n",
      "The reconstructed vector is: \n",
      "[ 1.00000000e+00 -1.00036510e-15 -9.35193195e-17 -4.66769152e-16\n",
      "  4.40859473e-16  2.79349772e-16 -3.48709912e-16 -2.32336055e-16]\n",
      "\n",
      "The probability of collapsing into each eigenvector is: \n",
      "[1.84347868e-01 1.65265243e-02 5.00017353e-07 5.72638188e-01\n",
      " 2.25128963e-01 5.97144685e-05 1.29824164e-03 3.95850968e-10]\n",
      "\n",
      "The probability of collapsing into the zeromode is: \n",
      "0.2251289628873802\n",
      "\n",
      "The spectrum of eigenvectors is:\n",
      "[[-4.29357506e-01-1.10236764e-15j -1.28555530e-01-1.81805014e-16j\n",
      "   7.07119051e-04+2.50954856e-16j  7.56728609e-01+0.00000000e+00j\n",
      "   4.74477568e-01+2.88989003e-16j -7.72751374e-03-4.53929516e-16j\n",
      "   3.60311205e-02+5.14211906e-16j  1.98960038e-05+4.74694978e-18j]\n",
      " [ 5.28206016e-01+0.00000000e+00j  5.20829107e-01+6.24673938e-16j\n",
      "  -1.73919959e-02-2.75939381e-17j  2.00748536e-02-4.98528912e-16j\n",
      "   6.08700076e-01+0.00000000e+00j  9.16811243e-02+3.84443129e-15j\n",
      "  -2.64779870e-01+2.06446973e-15j  6.12336397e-04-1.12142119e-17j]\n",
      " [ 5.94240978e-02+4.00183892e-16j -3.82595836e-01-4.39726312e-16j\n",
      "   1.05134366e-01-1.95369274e-16j -4.09182294e-01-7.99206382e-16j\n",
      "   5.59259524e-01-2.63400868e-15j -3.31248488e-01-8.53672057e-15j\n",
      "   4.98995368e-01-4.57300312e-15j -1.06143780e-02+2.05268785e-16j]\n",
      " [-4.78997151e-01+9.53486172e-17j -1.11739972e-01-6.05948657e-16j\n",
      "  -3.21450066e-01-5.63432984e-17j -4.54974799e-01-1.25276587e-15j\n",
      "   2.96028394e-01-1.23111391e-15j  4.92680653e-01+8.67478613e-15j\n",
      "  -3.37454836e-01+3.59648018e-15j  5.91683478e-02-3.28021358e-17j]\n",
      " [-5.06088331e-01-4.12686553e-16j  4.75891234e-01-3.13188102e-16j\n",
      "   4.98593790e-01+1.00923962e-16j -2.26993158e-01-5.49845960e-16j\n",
      "   3.87308202e-02+2.19974689e-17j -3.81203971e-01-2.01924949e-15j\n",
      "  -1.66891262e-01-1.06417956e-15j -2.06424892e-01-1.05257597e-16j]\n",
      " [-2.15996512e-01-1.18951713e-16j  5.25636602e-01+0.00000000e+00j\n",
      "  -5.04927896e-01-4.33268228e-16j -2.80991682e-02+4.58980016e-17j\n",
      "  -4.62539209e-02-5.40259823e-16j -1.38432631e-01-6.40952549e-15j\n",
      "   4.80772976e-01-3.08991132e-15j  4.10930959e-01+1.39188496e-16j]\n",
      " [-2.93160014e-02-1.91982527e-16j  2.23615548e-01+1.98870176e-16j\n",
      "   1.21004777e-01+6.49305086e-16j  1.09906165e-02-2.89810924e-17j\n",
      "  -1.48907154e-02-1.55030747e-15j  5.54260387e-01+0.00000000e+00j\n",
      "   5.30584387e-01+0.00000000e+00j -5.87730898e-01+2.79233110e-16j]\n",
      " [-6.45941443e-03-9.04609392e-17j  2.39771551e-02-5.64727141e-17j\n",
      "   6.05907201e-01+0.00000000e+00j -9.50493015e-03-3.85290915e-16j\n",
      "   9.48652649e-03-6.89574222e-16j  4.09133760e-01+2.11592107e-15j\n",
      "   1.58764278e-01+7.27016245e-16j  6.62935117e-01+0.00000000e+00j]]\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 960x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "## Classical diagnonalization\n",
    "A, P = la.eig(U)\n",
    "\n",
    "A_real = np.real(A)\n",
    "index = np.where(A_real == np.amax(A_real))[0][0]\n",
    "\n",
    "eigenvalue = A[index]\n",
    "zeromode_classic = P[:, index]\n",
    "\n",
    "zeromode_classic = np.real(normalize_eigenvector(zeromode_classic))\n",
    "zeromode_classic = np.reshape(zeromode_classic, (zeromode_classic.size, 1))\n",
    "\n",
    "print(\"the available eigenvalues are: \\n\" + str(A))\n",
    "print()\n",
    "\n",
    "phases_classical = np.array([])\n",
    "\n",
    "print(\"the phases are: \")\n",
    "\n",
    "for z in A:\n",
    "    a, phase = euler_representation(z)\n",
    "    phases_classical = np.append(phases_classical, [phase])\n",
    "    print(str(a) + \" * exp(i *\" + str(phase) + \" )\")\n",
    "    print()\n",
    "    \n",
    "print('The calculated phases are:')\n",
    "print(phases_classical)\n",
    "print()\n",
    "\n",
    "print(\"The minimum eigenvalue located is: \\n\" + str(eigenvalue))\n",
    "print()\n",
    "\n",
    "print(\"The minimum zeromode located is: \\n\" + str(np.real(zeromode_classic)))\n",
    "    \n",
    "# Estimating the probability of collapse into the zeromode\n",
    "initial = np.zeros((P.shape[0], ))\n",
    "initial[0] = 1\n",
    "    \n",
    "probability_zeromode, probability = analyze_collapse(initial, np.real(P), index)\n",
    "\n",
    "# Printing out the spectrum of eigenvectors\n",
    "print('The spectrum of eigenvectors is:' )\n",
    "print(P)\n",
    "print()\n",
    "\n",
    "# Visualization of the ground state PDF (exact solution)\n",
    "plt.figure(dpi = 150)\n",
    "plt.plot(x, y, 'r')\n",
    "plt.xlabel('x')\n",
    "plt.ylabel('P(x)')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56872c19",
   "metadata": {},
   "source": [
    "## Statistical results for the steady-state PDF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "2dcd8018",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The standard deviation of the distribution is:\n",
      "0.10812888193156592\n",
      "\n",
      "The expectation value of x is:\n",
      "-2.3603263571951676e-14\n",
      "\n",
      "The expectation value of x^2 is:\n",
      "138.56094953813795\n",
      "\n",
      "The skewness of the distribution is:\n",
      "2.0709695437567497\n",
      "\n",
      "The kurtosis of the distribution is:\n",
      "2.9492197395374973\n",
      "\n",
      "The moments of the distribution are:\n",
      "[0.0, 0.011691855107770521, 0.002616212028776786, 0.0008132552201772836, 0.00025005677183441736]\n",
      "\n",
      "The maxima(s) in the PDF occurs at x =\n",
      "1.2956478239119562\n",
      "\n"
     ]
    }
   ],
   "source": [
    "## Computation\n",
    "classical_x_expectation, classical_x_square_expectation = get_expectation(x, y)\n",
    "classical_deviation = np.sqrt(np.var(y))\n",
    "classical_skewness = skew(y, bias = False)\n",
    "classical_kurtosis = kurtosis(y)\n",
    "classical_moments = get_moments(y, moments)\n",
    "\n",
    "# Computing the CDF of the classical distribution\n",
    "cum_classical = np.cumsum(y)\n",
    "cum_classical = cum_classical/cum_classical[-1] # normalization\n",
    "\n",
    "# Determining the maximas in the PDF\n",
    "classical_max = get_maxima(x, y)\n",
    "\n",
    "## Print all relevant results\n",
    "# Print the standard deviation of the distribution\n",
    "print('The standard deviation of the distribution is:')\n",
    "print(classical_deviation)\n",
    "print()\n",
    "\n",
    "# Print the expectation value of x\n",
    "print('The expectation value of x is:')\n",
    "print(classical_x_expectation)\n",
    "print()\n",
    "\n",
    "# Print the expectation value of x^2\n",
    "print('The expectation value of x^2 is:')\n",
    "print(classical_x_square_expectation)\n",
    "print()\n",
    "\n",
    "# Print the skewness of the distribution \n",
    "print('The skewness of the distribution is:')\n",
    "print(classical_skewness)\n",
    "print()\n",
    "\n",
    "# Print the kurtosis of the distribution\n",
    "print('The kurtosis of the distribution is:')\n",
    "print(classical_kurtosis)\n",
    "print()\n",
    "\n",
    "# Print the moments of the distribution\n",
    "print('The moments of the distribution are:')\n",
    "print(classical_moments)\n",
    "print()\n",
    "\n",
    "# Print the maxima value\n",
    "print('The maxima(s) in the PDF occurs at x =')\n",
    "print(classical_max)\n",
    "print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d574fc08",
   "metadata": {},
   "source": [
    "## Zeromode estimation using the VQSVD algorithm\n",
    "\n",
    "### Ref.: Wang, X. et al. Quantum 5, 483 (2021)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "99e8736c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The selected weight is:\n",
      "[24.+0.j 21.+0.j 18.+0.j 15.+0.j 12.+0.j  9.+0.j  6.+0.j  3.+0.j]\n"
     ]
    }
   ],
   "source": [
    "# Hyperparameter settings\n",
    "rank = dimension # rank of the matrix to be learned\n",
    "itr = 200 # number of iterations\n",
    "lr = 0.02 # learning rate\n",
    "seed = 14 # random seed\n",
    "\n",
    "# Set the learning weight \n",
    "weight = np.arange(3 * rank, 0, -3).astype('complex128')\n",
    "print('The selected weight is:')\n",
    "print(weight)\n",
    "\n",
    "# Set circuit parameters\n",
    "num_qubits = int(np.log2(dimension))               \n",
    "depth = 70 # circuit depth\n",
    "\n",
    "# Define the quantum neural network\n",
    "def U_theta(num_qubits: int, depth: int) -> Circuit:\n",
    "\n",
    "    # Initialize the network with Circuit\n",
    "    cir = Circuit(num_qubits)\n",
    "    \n",
    "    # Build a hierarchy\n",
    "    for _ in range(depth):\n",
    "        cir.ry()\n",
    "        cir.rz()\n",
    "        cir.cnot()\n",
    "\n",
    "    return cir\n",
    "\n",
    "class VQSVD():\n",
    "    def __init__(self, matrix: np.ndarray, weights: np.ndarray, num_qubits: int, depth: int, rank: int, lr: float, itr: int, \\\n",
    "                 seed: int):\n",
    "        \n",
    "        # Hyperparameters\n",
    "        self.rank = rank\n",
    "        self.lr = lr\n",
    "        self.itr = itr\n",
    "        \n",
    "        paddle.seed(seed) # set a seed for better reproducibility of results\n",
    "        \n",
    "        # Create the parameter theta for learning W\n",
    "        self.cir_W = U_theta(num_qubits, depth)\n",
    "        \n",
    "        # Create a parameter phi to learn V_dagger\n",
    "        self.cir_V = U_theta(num_qubits, depth)\n",
    "        \n",
    "        # Convert Numpy array to Tensor supported in Paddle\n",
    "        self.M = paddle.to_tensor(matrix)\n",
    "        self.weight = paddle.to_tensor(weights)\n",
    "\n",
    "    # Define the loss function\n",
    "    def loss_func(self):\n",
    "        \n",
    "        # Get the unitary matrix representation of the quantum neural network\n",
    "        W = self.cir_W.unitary_matrix()\n",
    "        V = self.cir_V.unitary_matrix()\n",
    "    \n",
    "        # Initialize the loss function and singular value memory\n",
    "        loss = paddle.to_tensor(0.0)\n",
    "        singular_values = np.zeros(self.rank)\n",
    "        \n",
    "        # Define loss function\n",
    "        for i in range(self.rank):\n",
    "            loss -= paddle.real(self.weight)[i] * paddle.real(dagger(W) @ self.M @ V)[i][i]\n",
    "            singular_values[i] = paddle.real(dagger(W) @ self.M @ V)[i][i].numpy()\n",
    "        \n",
    "        # Function returns learned singular values and loss function\n",
    "        return loss, singular_values\n",
    "    \n",
    "    def get_matrix_U(self):\n",
    "        # Function to retrieve the U matrix\n",
    "        \n",
    "        return self.cir_W.unitary_matrix()\n",
    "    \n",
    "    def get_matrix_V(self):\n",
    "        # Function to retrieve the V_dagger matrix\n",
    "        \n",
    "        return self.cir_V.unitary_matrix()\n",
    "    \n",
    "    # Train the VQSVD network\n",
    "    def train(self):\n",
    "        loss_list, singular_value_list = [], []\n",
    "        optimizer = paddle.optimizer.Adam(learning_rate=self.lr, parameters=self.cir_W.parameters()+self.cir_V.parameters())\n",
    "        \n",
    "        for itr in range(self.itr):\n",
    "            loss, singular_values = self.loss_func()\n",
    "            loss.backward()\n",
    "            optimizer.minimize(loss)\n",
    "            optimizer.clear_grad()\n",
    "            loss_list.append(loss.numpy()[0])\n",
    "            singular_value_list.append(singular_values)\n",
    "#             if itr % 10 == 0:\n",
    "#                 print('iter:', itr,'loss:','%.4f'% loss.numpy()[0])\n",
    "                \n",
    "        return loss_list, singular_value_list\n",
    "    \n",
    "def training_svd(matrix, weights, num_qubits, depth, rank, lr, itr, seed):\n",
    "    # Function to perform the training of the dataset(s)\n",
    "    # Note: training and minimization performed using the Adam optimizer\n",
    "    \n",
    "    # Initialization\n",
    "    loss_list, singular_value_list = [], []\n",
    "    U_learned, V_dagger_learned = [], []\n",
    "    \n",
    "    # Construct the VQSVD neural network and train the dataset\n",
    "    net = VQSVD(matrix = matrix, weights = weights, num_qubits = num_qubits, depth = depth, rank = rank, lr = lr, itr = itr, \\\n",
    "                seed = seed)\n",
    "    loss_list, singular_value_list = net.train() # train the dataset\n",
    "    \n",
    "    # Obtain the learned U and V_dagger matrices\n",
    "    U_learned = net.get_matrix_U().numpy()\n",
    "    V_dagger_learned = dagger(net.get_matrix_V()).numpy()\n",
    "    \n",
    "    # Extract the zeromode\n",
    "    zeromode_trained_svd = V_dagger_learned[-1, :] # as the singular values are arranged in descending order\n",
    "    \n",
    "    # Check for signs (to maintain reproducibility)\n",
    "    for val in zeromode_trained_svd:\n",
    "        if val < 0:\n",
    "            zeromode_trained_svd = -zeromode_trained_svd # per Python's convention\n",
    "        break\n",
    "    \n",
    "    # Reshape the zeromode as a column vector for better visualization and/or comparison\n",
    "    zeromode_trained_svd = np.reshape(zeromode_trained_svd, (zeromode_trained_svd.shape[0], 1))\n",
    "    zeromode_trained_svd = np.real(zeromode_trained_svd) # we're only interested in the real part\n",
    "    \n",
    "    # Compute the probability of collapsing into each basis state\n",
    "    zeromode_prob = []\n",
    "    for val in zeromode_trained_svd:\n",
    "        zeromode_prob.append(abs(val) ** 2) # absolute square of the amplitudes\n",
    "    \n",
    "    return U_learned, V_dagger_learned, zeromode_trained_svd, zeromode_prob, singular_value_list, loss_list"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e47d680",
   "metadata": {},
   "source": [
    "## Quantum analysis\n",
    "\n",
    "### Getting qubits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "db341d0d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision qubits: [0, 1, 2, 3, 4, 5, 6]\n",
      "Query qubits: [7, 8, 9]\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "## QPE algorithm\n",
    "\n",
    "num_precision_qubits = 7\n",
    "precision_qubits, query_qubits = get_qubits(num_precision_qubits, n_query_qubits)\n",
    "print(\"Precision qubits: \" + str(precision_qubits))\n",
    "print(\"Query qubits: \" + str(query_qubits))\n",
    "print(n_query_qubits)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb208f3e",
   "metadata": {},
   "source": [
    "### Running QPE (no DD)\n",
    "\n",
    "### Note: All simulations run on IBMQ Brisbane"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "92605566",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO 2024-04-17 19:26:49,896 runningpassmanager.py:247] Pass: ContainsInstruction - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:49,898 runningpassmanager.py:247] Pass: UnitarySynthesis - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:49,899 runningpassmanager.py:247] Pass: HighLevelSynthesis - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:50,712 runningpassmanager.py:247] Pass: Unroll3qOrMore - 811.27405 (ms)\n",
      "INFO 2024-04-17 19:26:50,712 runningpassmanager.py:247] Pass: SetLayout - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:50,722 runningpassmanager.py:247] Pass: TrivialLayout - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:50,725 runningpassmanager.py:247] Pass: CheckMap - 3.54075 (ms)\n",
      "INFO 2024-04-17 19:26:50,749 runningpassmanager.py:247] Pass: VF2Layout - 21.42096 (ms)\n",
      "INFO 2024-04-17 19:26:50,842 runningpassmanager.py:247] Pass: BarrierBeforeFinalMeasurements - 93.54138 (ms)\n",
      "INFO 2024-04-17 19:26:50,842 runningpassmanager.py:247] Pass: ContainsInstruction - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:51,211 runningpassmanager.py:247] Pass: SabreLayout - 368.69740 (ms)\n",
      "INFO 2024-04-17 19:26:51,211 runningpassmanager.py:247] Pass: ContainsInstruction - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:51,226 runningpassmanager.py:247] Pass: CheckMap - 15.23399 (ms)\n",
      "INFO 2024-04-17 19:26:51,591 runningpassmanager.py:247] Pass: UnitarySynthesis - 364.67052 (ms)\n",
      "INFO 2024-04-17 19:26:51,615 runningpassmanager.py:247] Pass: HighLevelSynthesis - 23.72742 (ms)\n",
      "INFO 2024-04-17 19:26:51,691 runningpassmanager.py:247] Pass: UnrollCustomDefinitions - 75.55485 (ms)\n",
      "INFO 2024-04-17 19:26:51,729 basis_translator.py:156] Begin BasisTranslator from source basis {('x', 1), ('cx', 2), ('u3', 1), ('rz', 1), ('h', 1), ('swap', 2), ('sx', 1), ('barrier', 10), ('cp', 2), ('measure', 1)} to target basis {'save_expval', 'barrier', 'delay', 'set_matrix_product_state', 'continue_loop', 'reset', 'save_probabilities_dict', 'set_density_matrix', 'save_statevector', 'measure', 'x', 'set_statevector', 'while_loop', 'save_stabilizer', 'ecr', 'save_amplitudes', 'save_amplitudes_sq', 'save_statevector_dict', 'save_clifford', 'for_loop', 'save_superop', 'quantum_channel', 'qerror_loc', 'save_expval_var', 'roerror', 'save_state', 'id', 'save_probabilities', 'kraus', 'snapshot', 'save_matrix_product_state', 'set_stabilizer', 'rz', 'set_superop', 'save_unitary', 'sx', 'superop', 'set_unitary', 'save_density_matrix', 'break_loop', 'if_else'}.\n",
      "INFO 2024-04-17 19:26:51,732 basis_translator.py:206] Basis translation path search completed in 0.002s.\n",
      "INFO 2024-04-17 19:26:51,798 basis_translator.py:231] Basis translation paths composed in 0.064s.\n",
      "INFO 2024-04-17 19:26:52,861 basis_translator.py:282] Basis translation instructions replaced in 1.063s.\n",
      "INFO 2024-04-17 19:26:52,861 runningpassmanager.py:247] Pass: BasisTranslator - 1169.57521 (ms)\n",
      "INFO 2024-04-17 19:26:52,890 runningpassmanager.py:247] Pass: CheckGateDirection - 29.44303 (ms)\n",
      "INFO 2024-04-17 19:26:53,074 runningpassmanager.py:247] Pass: GateDirection - 183.99668 (ms)\n",
      "INFO 2024-04-17 19:26:53,104 runningpassmanager.py:247] Pass: RemoveResetInZeroState - 29.84571 (ms)\n",
      "INFO 2024-04-17 19:26:53,178 runningpassmanager.py:247] Pass: Depth - 71.69628 (ms)\n",
      "INFO 2024-04-17 19:26:53,179 runningpassmanager.py:247] Pass: FixedPoint - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:53,226 runningpassmanager.py:247] Pass: Size - 45.29119 (ms)\n",
      "INFO 2024-04-17 19:26:53,228 runningpassmanager.py:247] Pass: FixedPoint - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:54,954 runningpassmanager.py:247] Pass: Optimize1qGatesDecomposition - 1722.30387 (ms)\n",
      "INFO 2024-04-17 19:26:54,998 runningpassmanager.py:247] Pass: CXCancellation - 44.38806 (ms)\n",
      "INFO 2024-04-17 19:26:55,018 runningpassmanager.py:247] Pass: GatesInBasis - 20.03503 (ms)\n",
      "INFO 2024-04-17 19:26:55,058 runningpassmanager.py:247] Pass: Depth - 39.98661 (ms)\n",
      "INFO 2024-04-17 19:26:55,058 runningpassmanager.py:247] Pass: FixedPoint - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:55,078 runningpassmanager.py:247] Pass: Size - 20.01071 (ms)\n",
      "INFO 2024-04-17 19:26:55,088 runningpassmanager.py:247] Pass: FixedPoint - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:55,429 runningpassmanager.py:247] Pass: Optimize1qGatesDecomposition - 340.90495 (ms)\n",
      "INFO 2024-04-17 19:26:55,476 runningpassmanager.py:247] Pass: CXCancellation - 47.13702 (ms)\n",
      "INFO 2024-04-17 19:26:55,503 runningpassmanager.py:247] Pass: GatesInBasis - 24.38188 (ms)\n",
      "INFO 2024-04-17 19:26:55,535 runningpassmanager.py:247] Pass: Depth - 31.31795 (ms)\n",
      "INFO 2024-04-17 19:26:55,535 runningpassmanager.py:247] Pass: FixedPoint - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:55,565 runningpassmanager.py:247] Pass: Size - 29.95062 (ms)\n",
      "INFO 2024-04-17 19:26:55,565 runningpassmanager.py:247] Pass: FixedPoint - 0.00000 (ms)\n",
      "INFO 2024-04-17 19:26:55,586 runningpassmanager.py:247] Pass: ContainsInstruction - 21.10076 (ms)\n",
      "INFO 2024-04-17 19:26:55,664 transpiler.py:426] Total Transpile Time - 6984.73811 (ms)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Phases: [0.0234375, 0.6171875, 0.109375, 0.1171875, 0.0078125, 0.5234375, 0.0703125, 0.4609375, 0.9921875, 0.046875, 0.015625, 0.0546875, 0.03125, 0.96875, 0.0859375, 0.984375, 0.3984375, 0.0, 0.078125, 0.546875, 0.4921875, 0.2421875, 0.484375, 0.0390625, 0.8671875, 0.7109375, 0.9296875, 0.5546875, 0.0625, 0.15625, 0.609375, 0.3671875, 0.21875, 0.1328125, 0.53125, 0.6015625, 0.2109375, 0.9609375, 0.859375, 0.7421875, 0.234375, 0.5859375, 0.1484375, 0.09375, 0.71875, 0.1796875, 0.6953125, 0.40625, 0.6484375, 0.9765625, 0.8828125, 0.4765625, 0.203125, 0.46875, 0.734375, 0.8984375, 0.515625, 0.921875, 0.4296875, 0.2265625, 0.5390625, 0.9140625, 0.1953125, 0.7734375, 0.5078125, 0.59375, 0.3359375, 0.125, 0.5703125, 0.359375, 0.1015625, 0.9375, 0.9453125, 0.6796875, 0.3828125, 0.171875, 0.65625, 0.671875, 0.3046875, 0.8359375, 0.1875, 0.4453125, 0.875, 0.5625, 0.6640625, 0.7265625, 0.625, 0.78125, 0.640625, 0.6328125, 0.453125, 0.2578125, 0.4140625, 0.703125, 0.890625, 0.28125, 0.90625, 0.578125, 0.8046875, 0.84375, 0.2734375, 0.140625, 0.296875, 0.421875, 0.796875, 0.6875, 0.1640625, 0.75, 0.828125, 0.3515625, 0.8203125, 0.8515625, 0.4375, 0.5, 0.7578125, 0.390625, 0.3203125, 0.265625, 0.765625, 0.953125, 0.8125, 0.7890625, 0.25, 0.34375, 0.375, 0.2890625, 0.3125, 0.328125]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\abc\\anaconda3\\lib\\site-packages\\qiskit_aer\\backends\\aerbackend.py:463: DeprecationWarning: Setting metadata to None was deprecated in Terra 0.24.0 and this ability will be removed in a future release. Instead, set metadata to an empty dictionary.\n",
      "  circ.metadata = metadata\n"
     ]
    }
   ],
   "source": [
    "# Defining parameters for the quantum simulation\n",
    "optimization_level = 1\n",
    "runit = 4\n",
    "shots = 500_000\n",
    "\n",
    "_, _, counts, time, phases, eig_vals, qpe_eigenvals, eig_hermitian, min_eigenvalue, phases_quantum, zeromode_qpe, zeromode_quantum_sign, prob, rate, overlap_zeromode, similarity = \\\n",
    "qpe_implementation_DD(A, U, zeromode_classic, num_precision_qubits, n_query_qubits, dimension, sequence = False, \\\n",
    "                      shots = shots, optimization_level = optimization_level, runit = runit, noise = True, use_DD = False, \\\n",
    "                      control_unitary = True, use_Montreal = True, make_even = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6b2635c6",
   "metadata": {},
   "source": [
    "### Printing out QPE (no VQSVD) results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "99f8313b",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The time taken to run the simulation is (in seconds):\n",
      "13.96751880645752\n",
      "\n",
      "The QPE eigenvalues are:\n",
      "[(0.989176509964781+0.14673047445536175j), (-0.7409511253549591-0.6715589548470184j), (0.773010453362737+0.6343932841636455j), (0.7409511253549592+0.6715589548470183j), (0.9987954562051724+0.049067674327418015j), (-0.989176509964781-0.14673047445536158j), (0.9039892931234433+0.4275550934302821j), (-0.970031253194544+0.24298017990326407j), (0.9987954562051724-0.04906767432741809j), (0.9569403357322088+0.29028467725446233j), (0.9951847266721969+0.0980171403295606j), (0.9415440651830208+0.33688985339222005j), (0.9807852804032304+0.19509032201612825j), (0.9807852804032303-0.19509032201612872j), (0.8577286100002721+0.5141027441932217j), (0.9951847266721969-0.0980171403295605j), (-0.8032075314806448+0.5956993044924335j), (1+0j), (0.881921264348355+0.47139673682599764j), (-0.9569403357322089-0.2902846772544621j), (-0.9987954562051724+0.049067674327417966j), (0.049067674327418126+0.9987954562051724j), (-0.9951847266721968+0.09801714032956083j), (0.970031253194544+0.24298017990326387j), (0.6715589548470183-0.7409511253549591j), (-0.24298017990326412-0.970031253194544j), (0.9039892931234431-0.42755509343028253j), (-0.9415440651830208-0.3368898533922201j), (0.9238795325112867+0.3826834323650898j), (0.5555702330196023+0.8314696123025452j), (-0.7730104533627371-0.6343932841636453j), (-0.6715589548470184+0.740951125354959j), (0.19509032201612833+0.9807852804032304j), (0.6715589548470183+0.7409511253549591j), (-0.9807852804032304-0.19509032201612836j), (-0.8032075314806449-0.5956993044924332j), (0.24298017990326398+0.970031253194544j), (0.970031253194544-0.24298017990326418j), (0.6343932841636456-0.7730104533627369j), (-0.04906767432741803-0.9987954562051724j), (0.09801714032956077+0.9951847266721968j), (-0.8577286100002721-0.5141027441932216j), (0.5956993044924335+0.8032075314806448j), (0.8314696123025452+0.5555702330196022j), (-0.19509032201612866-0.9807852804032303j), (0.4275550934302822+0.9039892931234433j), (-0.33688985339221994-0.9415440651830208j), (-0.8314696123025453+0.5555702330196022j), (-0.5956993044924331-0.803207531480645j), (0.9891765099647809-0.1467304744553624j), (0.7409511253549589-0.6715589548470187j), (-0.989176509964781+0.1467304744553618j), (0.29028467725446233+0.9569403357322089j), (-0.9807852804032304+0.1950903220161286j), (-0.09801714032956045-0.9951847266721969j), (0.803207531480645-0.5956993044924332j), (-0.9951847266721969-0.09801714032956059j), (0.8819212643483548-0.4713967368259979j), (-0.9039892931234433+0.42755509343028203j), (0.14673047445536175+0.989176509964781j), (-0.970031253194544-0.24298017990326382j), (0.857728610000272-0.5141027441932219j), (0.33688985339222005+0.9415440651830208j), (0.14673047445536194-0.9891765099647809j), (-0.9987954562051724-0.049067674327417724j), (-0.8314696123025455-0.555570233019602j), (-0.5141027441932216+0.8577286100002721j), (0.7071067811865476+0.7071067811865476j), (-0.9039892931234434-0.4275550934302818j), (-0.6343932841636454+0.7730104533627371j), (0.8032075314806449+0.5956993044924334j), (0.9238795325112865-0.3826834323650904j), (0.9415440651830208-0.33688985339222j), (-0.4275550934302825-0.9039892931234431j), (-0.7409511253549589+0.6715589548470186j), (0.4713967368259978+0.8819212643483549j), (-0.5555702330196022-0.8314696123025452j), (-0.47139673682599786-0.8819212643483549j), (-0.33688985339221994+0.9415440651830208j), (0.5141027441932216-0.8577286100002722j), (0.38268343236508984+0.9238795325112867j), (-0.9415440651830207+0.33688985339222033j), (0.7071067811865474-0.7071067811865477j), (-0.9238795325112868-0.38268343236508967j), (-0.5141027441932218-0.857728610000272j), (-0.1467304744553623-0.9891765099647809j), (-0.7071067811865477-0.7071067811865475j), (0.1950903220161283-0.9807852804032304j), (-0.6343932841636459-0.7730104533627367j), (-0.6715589548470187-0.7409511253549589j), (-0.9569403357322088+0.2902846772544624j), (-0.04906767432741801+0.9987954562051724j), (-0.857728610000272+0.5141027441932218j), (-0.29028467725446244-0.9569403357322088j), (0.7730104533627365-0.6343932841636459j), (-0.1950903220161282+0.9807852804032304j), (0.8314696123025452-0.5555702330196022j), (-0.881921264348355-0.47139673682599764j), (0.3368898533922196-0.9415440651830209j), (0.5555702330196018-0.8314696123025455j), (-0.14673047445536164+0.989176509964781j), (0.6343932841636455+0.7730104533627369j), (-0.29028467725446216+0.9569403357322089j), (-0.8819212643483549+0.4713967368259978j), (0.29028467725446205-0.9569403357322089j), (-0.38268343236509034-0.9238795325112865j), (0.5141027441932217+0.8577286100002721j), (-1.8369701987210297e-16-1j), (0.4713967368259976-0.881921264348355j), (-0.5956993044924334+0.8032075314806449j), (0.42755509343028214-0.9039892931234433j), (0.5956993044924328-0.8032075314806453j), (-0.9238795325112867+0.3826834323650899j), (-1+1.2246467991473532e-16j), (0.04906767432741766-0.9987954562051724j), (-0.773010453362737+0.6343932841636455j), (-0.42755509343028186+0.9039892931234434j), (-0.09801714032956065+0.9951847266721969j), (0.09801714032956009-0.9951847266721969j), (0.9569403357322088-0.2902846772544625j), (0.38268343236509-0.9238795325112866j), (0.24298017990326376-0.970031253194544j), (6.123233995736766e-17+1j), (-0.555570233019602+0.8314696123025453j), (-0.7071067811865475+0.7071067811865476j), (-0.24298017990326387+0.970031253194544j), (-0.3826834323650897+0.9238795325112867j), (-0.4713967368259977+0.881921264348355j)]\n",
      "\n",
      "The eigenvalues of the FPE operator matrix are:\n",
      "[6.234097921967246, 6.135923151542564, 6.086835766330224, 5.890486225480862, 5.301437602932776, 5.448699758569798, 5.056000676871073, 6.1850105367549055]\n",
      "\n",
      "The minimum eigenvalue of the unitary matrix is:\n",
      "(0.9988141999764354+0.04868463746843894j)\n",
      "\n",
      "The QPE phases are:\n",
      "[ 1.47262156e-01  7.36310778e-01  6.87223393e-01  7.36310778e-01\n",
      "  4.90873852e-02  1.47262156e-01  4.41786467e-01 -2.45436926e-01\n",
      " -4.90873852e-02  2.94524311e-01  9.81747704e-02  3.43611696e-01\n",
      "  1.96349541e-01 -1.96349541e-01  5.39961237e-01 -9.81747704e-02\n",
      " -6.38136008e-01  0.00000000e+00  4.90873852e-01  2.94524311e-01\n",
      " -4.90873852e-02  1.52170894e+00 -9.81747704e-02  2.45436926e-01\n",
      " -8.34485549e-01  1.32535940e+00 -4.41786467e-01  3.43611696e-01\n",
      "  3.92699082e-01  9.81747704e-01  6.87223393e-01 -8.34485549e-01\n",
      "  1.37444679e+00  8.34485549e-01  1.96349541e-01  6.38136008e-01\n",
      "  1.32535940e+00 -2.45436926e-01 -8.83572934e-01  1.52170894e+00\n",
      "  1.47262156e+00  5.39961237e-01  9.32660319e-01  5.89048623e-01\n",
      "  1.37444679e+00  1.12900986e+00  1.22718463e+00 -5.89048623e-01\n",
      "  9.32660319e-01 -1.47262156e-01 -7.36310778e-01 -1.47262156e-01\n",
      "  1.27627202e+00 -1.96349541e-01  1.47262156e+00 -6.38136008e-01\n",
      "  9.81747704e-02 -4.90873852e-01 -4.41786467e-01  1.42353417e+00\n",
      "  2.45436926e-01 -5.39961237e-01  1.22718463e+00 -1.42353417e+00\n",
      "  4.90873852e-02  5.89048623e-01 -1.03083509e+00  7.85398163e-01\n",
      "  4.41786467e-01 -8.83572934e-01  6.38136008e-01 -3.92699082e-01\n",
      " -3.43611696e-01  1.12900986e+00 -7.36310778e-01  1.07992247e+00\n",
      "  9.81747704e-01  1.07992247e+00 -1.22718463e+00 -1.03083509e+00\n",
      "  1.17809725e+00 -3.43611696e-01 -7.85398163e-01  3.92699082e-01\n",
      "  1.03083509e+00  1.42353417e+00  7.85398163e-01 -1.37444679e+00\n",
      "  8.83572934e-01  8.34485549e-01 -2.94524311e-01 -1.52170894e+00\n",
      " -5.39961237e-01  1.27627202e+00 -6.87223393e-01 -1.37444679e+00\n",
      " -5.89048623e-01  4.90873852e-01 -1.22718463e+00 -9.81747704e-01\n",
      " -1.42353417e+00  8.83572934e-01 -1.27627202e+00 -4.90873852e-01\n",
      " -1.27627202e+00  1.17809725e+00  1.03083509e+00  1.57079633e+00\n",
      " -1.07992247e+00 -9.32660319e-01 -1.12900986e+00 -9.32660319e-01\n",
      " -3.92699082e-01 -1.22464680e-16 -1.52170894e+00 -6.87223393e-01\n",
      " -1.12900986e+00 -1.47262156e+00 -1.47262156e+00 -2.94524311e-01\n",
      " -1.17809725e+00 -1.32535940e+00  1.57079633e+00 -9.81747704e-01\n",
      " -7.85398163e-01 -1.32535940e+00 -1.17809725e+00 -1.07992247e+00]\n",
      "\n",
      "The QPE zeromode is:\n",
      "[[0.32304892]\n",
      " [0.34504968]\n",
      " [0.35207789]\n",
      " [0.36101007]\n",
      " [0.34998425]\n",
      " [0.35965033]\n",
      " [0.36304013]\n",
      " [0.37236745]]\n",
      "\n",
      "The zeromode obtained using SVD is:\n",
      "[[ 0.47447757+0.00000000e+00j]\n",
      " [ 0.60870008-2.95090095e-15j]\n",
      " [ 0.55925952-4.24332171e-15j]\n",
      " [ 0.29602839-2.97750971e-15j]\n",
      " [ 0.03873082-1.00611308e-15j]\n",
      " [-0.04625392+2.57000646e-16j]\n",
      " [-0.01489072+2.25857637e-16j]\n",
      " [ 0.00948653-1.30275222e-16j]]\n",
      "\n",
      "The hit rate is:\n",
      "0.008164\n",
      "\n",
      "The overlap between the classical and QPE zeromodes is:\n",
      "0.6621298697172684\n",
      "\n",
      "The cosine similarity between the classical and SVD zeromodes is:\n",
      "1\n",
      "\n"
     ]
    }
   ],
   "source": [
    "## Printing all relevant results\n",
    "\n",
    "# Print the time taken to run the simulation \n",
    "print('The time taken to run the simulation is (in seconds):')\n",
    "print(time)\n",
    "print()\n",
    "\n",
    "# Print the QPE eigenvalues\n",
    "print('The QPE eigenvalues are:')\n",
    "print(qpe_eigenvals)\n",
    "print()\n",
    "\n",
    "# Print the Hermitian matrix eigenvalues\n",
    "print('The eigenvalues of the FPE operator matrix are:')\n",
    "print(eig_hermitian)\n",
    "print()\n",
    "\n",
    "# Print the minimum eigenvalue of the unitary matrix\n",
    "print('The minimum eigenvalue of the unitary matrix is:')\n",
    "print(min_eigenvalue)\n",
    "print()\n",
    "\n",
    "# Print the QPE phases\n",
    "print('The QPE phases are:')\n",
    "print(phases_quantum)\n",
    "print()\n",
    "\n",
    "# Print the QPE zeromode with incorrect signs\n",
    "print('The QPE zeromode is:')\n",
    "print(zeromode_quantum_sign)\n",
    "print()\n",
    "\n",
    "# Print the zeromode obtained using SVD \n",
    "print('The zeromode obtained using SVD is:')\n",
    "print(zeromode_qpe)\n",
    "print()\n",
    "\n",
    "# Print the hit rate\n",
    "print('The hit rate is:')\n",
    "print(rate)\n",
    "print()\n",
    "\n",
    "# Print the overlap between the classical and QPE zeromodes\n",
    "print('The overlap between the classical and QPE zeromodes is:')\n",
    "print(overlap_zeromode)\n",
    "print()\n",
    "\n",
    "# Print the cosine similarity between the classical zeromode and the one obtained using SVD\n",
    "print('The cosine similarity between the classical and SVD zeromodes is:')\n",
    "print(similarity)\n",
    "print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b86e8def",
   "metadata": {},
   "source": [
    "### Running VQSVD"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8d3c822e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\abc\\anaconda3\\lib\\site-packages\\paddle\\fluid\\framework.py:1104: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\n",
      "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
      "  elif dtype == np.bool:\n",
      "C:\\Users\\abc\\anaconda3\\lib\\site-packages\\paddle\\fluid\\dygraph\\math_op_patch.py:276: UserWarning: The dtype of left and right variables are not the same, left dtype is paddle.float32, but right dtype is paddle.float64, the right dtype will convert to paddle.float32\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "## Analysis using the VQSVD algorithm\n",
    "# Get the required matrix\n",
    "matrix = U - min_eigenvalue * np.identity(dimension)\n",
    "    \n",
    "# Train the dataset and obtain the required outcomes\n",
    "U_learned, V_dagger_learned, zeromode_trained_svd, zeromode_prob, singular_value_list, loss_list = training_svd(matrix = matrix, \\\n",
    "                                                                                                 weights = weight, \\\n",
    "                                                                                                 num_qubits = num_qubits, depth = depth, \\\n",
    "                                                                                                 rank = rank, lr = lr, itr = itr, \\\n",
    "                                                                                                 seed = seed)\n",
    "\n",
    "# Compute the cosine similarity between the classical and VQSVD zeromodes\n",
    "similarity = get_similarity(zeromode_classic, zeromode_trained_svd, runit = 4)\n",
    "overlap = get_overlap(zeromode_classic, zeromode_trained_svd, runit = 4)\n",
    "distance = euclidean_distance(zeromode_classic, zeromode_trained_svd, runit = 4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee514250",
   "metadata": {},
   "source": [
    "### Printing out VQSVD results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "20a221bd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The zeromode obtained using the VQSVD algorithm is:\n",
      "[[ 0.42640302]\n",
      " [ 0.54742444]\n",
      " [ 0.5004639 ]\n",
      " [ 0.26661828]\n",
      " [ 0.03518621]\n",
      " [-0.04299745]\n",
      " [-0.01499427]\n",
      " [ 0.00800069]]\n",
      "\n",
      "The probability of collapsing into each basis state is:\n",
      "[array([0.18181953], dtype=float32), array([0.29967353], dtype=float32), array([0.2504641], dtype=float32), array([0.07108531], dtype=float32), array([0.00123807], dtype=float32), array([0.00184878], dtype=float32), array([0.00022483], dtype=float32), array([6.401108e-05], dtype=float32)]\n",
      "\n",
      "The fidelity between the classical and VQSVD zeromodes is:\n",
      "0.9999941087458211\n",
      "\n",
      "The overlap between the classical and VQSVD zeromodes is:\n",
      "0.8980250882767141\n",
      "\n",
      "The Euclidean distance between the classical and VQSVD zeromodes is:\n",
      "[0.10207104]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "## Print all relevant results\n",
    "# Print the zeromode\n",
    "print('The zeromode obtained using the VQSVD algorithm is:')\n",
    "print(zeromode_trained_svd)\n",
    "print()\n",
    "\n",
    "# Print the probability of collapsing into each basis state\n",
    "print('The probability of collapsing into each basis state is:')\n",
    "print(zeromode_prob)\n",
    "print()\n",
    "\n",
    "# Print the similarity score\n",
    "print('The fidelity between the classical and VQSVD zeromodes is:')\n",
    "print(similarity)\n",
    "print()\n",
    "\n",
    "# Print the overlap\n",
    "print('The overlap between the classical and VQSVD zeromodes is:')\n",
    "print(overlap)\n",
    "print()\n",
    "\n",
    "# Print the Euclidean distance\n",
    "print('The Euclidean distance between the classical and VQSVD zeromodes is:')\n",
    "print(distance)\n",
    "print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f82a6e18",
   "metadata": {},
   "source": [
    "## Plotting the loss curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "f0d357f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3840x2880 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "## Plotting a loss curve for visualization\n",
    "x_axis = range(1, len(loss_list) + 1)\n",
    "\n",
    "plt.figure(dpi = 600)\n",
    "plt.plot(list(x_axis), loss_list)\n",
    "plt.xlabel('Iteration', fontsize = 17)\n",
    "plt.ylabel('Loss', fontsize = 17)\n",
    "plt.title('LOSS CURVE', fontsize = 15)\n",
    "plt.grid(True)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "22541a6c",
   "metadata": {},
   "source": [
    "## Error analysis data and plots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "15ecdb95",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3840x2880 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 960x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The SVD errors using VQSVD are:\n",
      "[3.8299580825555015, 3.2680313535378263, 2.622082096424629, 1.8219265737080157, 0.35963591080487683, 0.1929445377889171, 0.1356896087447827, 0.048746516607028764]\n",
      "\n",
      "The SVD errors using classical SVD are:\n",
      "[3.8299580825555015, 3.2680080855306586, 2.622043614433272, 1.8219068816353683, 0.3595015247456888, 0.19255534138420255, 0.13158715423327258, 0.042960881175518925]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "## Error analysis (Frobenius norm)\n",
    "err_subfull, err_local, err_SVD = error_analysis(U, min_eigenvalue, U_learned, V_dagger_learned, singular_value_list, \\\n",
    "                                                 rank = rank)\n",
    "\n",
    "## Print all relevant results\n",
    "# Print the local errors\n",
    "print('The SVD errors using VQSVD are:')\n",
    "print(err_subfull)\n",
    "print()\n",
    "\n",
    "# Print the SVD errors\n",
    "print('The SVD errors using classical SVD are:')\n",
    "print(err_SVD)\n",
    "print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13256886",
   "metadata": {},
   "source": [
    "## Computing the steady-state PDF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "dec2818d",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The standard deviation of the distribution is:\n",
      "0.08600423793152613\n",
      "\n",
      "The expectation value of x is:\n",
      "-1.3468593488065383e-14\n",
      "\n",
      "The expectation value of x^2 is:\n",
      "328.9146453878174\n",
      "\n",
      "The skewness of the distribution is:\n",
      "1.5787242819818925\n",
      "\n",
      "The kurtosis of the distribution is:\n",
      "1.3083946268902205\n",
      "\n",
      "The moments of the distribution are:\n",
      "[0.0, 0.007396728942182559, 0.0010035521224842994, 0.00023571915935026355, 5.231820909667349e-05]\n",
      "\n",
      "The mean of the PDF estimated using VQSVD is:\n",
      "0.05\n",
      "\n",
      "The variance of the PDF estimated using VQSVD is:\n",
      "0.007396728942182559\n",
      "\n",
      "The error in estimating the mean is (percentage):\n",
      "0.002499999999866498\n",
      "\n",
      "The error in estimating the variance is (percentage):\n",
      "0.42951261655879613\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1df11b91f90>"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3840x2880 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 960x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "## Get the ground state PDF using the VQSVD zeromode\n",
    "x_qpe, y_qpe = get_pdf(nmax, x, dx, L, shift, zeromode_quantum_sign, normalize = True, make_even = True)\n",
    "\n",
    "# Compute the standard deviation of the distribution\n",
    "deviation = np.sqrt(np.var(y_qpe))\n",
    "\n",
    "# Compute the expectation value of x\n",
    "x_expectation, x_square_expectation = get_expectation(x, y_qpe)\n",
    "\n",
    "# Compute the skewness and kurtosis of the distribution\n",
    "skewness = skew(y_qpe, bias = False)\n",
    "kurtosis_val = kurtosis(y_qpe)\n",
    "\n",
    "# Compute the moments of the distribution\n",
    "quantum_moments = get_moments(y_qpe, moments)\n",
    "\n",
    "# Compute the quantum CDF\n",
    "cum_quantum = np.cumsum(y_qpe)\n",
    "cum_quantum = cum_quantum/cum_quantum[-1] # normalization\n",
    "\n",
    "# Compute the mean and variance of the distribution\n",
    "mean_dis = np.mean(y_qpe)\n",
    "variance = np.var(y_qpe)\n",
    "\n",
    "# Compute the absolute error percentage in estimating the mean and variance\n",
    "error_mean = abs(mean_dis - np.mean(y)) * 100\n",
    "error_variance = abs(variance - np.var(y)) * 100\n",
    "\n",
    "## Print the relevant results\n",
    "# Print the standard deviation\n",
    "print('The standard deviation of the distribution is:')\n",
    "print(deviation)\n",
    "print()\n",
    "\n",
    "# Print the expectation value\n",
    "print('The expectation value of x is:')\n",
    "print(x_expectation)\n",
    "print()\n",
    "\n",
    "# Print the expectation value of x^2\n",
    "print('The expectation value of x^2 is:')\n",
    "print(x_square_expectation)\n",
    "print()\n",
    "\n",
    "# Print the skewness of the distribution\n",
    "print('The skewness of the distribution is:')\n",
    "print(skewness)\n",
    "print()\n",
    "\n",
    "# Print the kurtosis of the distribution\n",
    "print('The kurtosis of the distribution is:')\n",
    "print(kurtosis_val)\n",
    "print()\n",
    "\n",
    "# Print the moments of the distribution\n",
    "print('The moments of the distribution are:')\n",
    "print(quantum_moments)\n",
    "print()\n",
    "\n",
    "# Print the mean\n",
    "print('The mean of the PDF estimated using VQSVD is:')\n",
    "print(mean_dis)\n",
    "print()\n",
    "\n",
    "# Print the variance\n",
    "print('The variance of the PDF estimated using VQSVD is:')\n",
    "print(variance)\n",
    "print()\n",
    "\n",
    "# Print the error in estimating the mean\n",
    "print('The error in estimating the mean is (percentage):')\n",
    "print(error_mean)\n",
    "print()\n",
    "\n",
    "# Print the error in estimating the variance\n",
    "print('The error in estimating the variance is (percentage):')\n",
    "print(error_variance)\n",
    "print()\n",
    "\n",
    "# Comparison between the ground state PDFs (on a log scale)\n",
    "y_cutoff = 3 * 1e-4\n",
    "\n",
    "# Extract the relevant results \n",
    "x_classical, y_classical = cutoff_graph(x, y, y_cutoff) # exact analytical solution\n",
    "x_quantum, y_quantum = cutoff_graph(x, y_qpe, y_cutoff) # QPE (or VQSVD)\n",
    "x_diag, y_diag = cutoff_graph(x_diagonalization, y_diagonalization, y_cutoff) # exact diagonalization\n",
    "\n",
    "fig, ax = plt.subplots(dpi = 600)\n",
    "\n",
    "# Plot the first set of data on a log base 2 scale\n",
    "ax.plot(x_classical, y_classical, color = 'orange', label = 'Exact analytical solution')\n",
    "\n",
    "# Plot the exact diagonalization results\n",
    "ax.plot(x_diag, y_diag, '--b', label = \"Exact diagonalization\")\n",
    "\n",
    "# Plot the second set of data on a log base 2 scale\n",
    "ax.plot(x_quantum, y_quantum, 'g--', label = 'QPE')\n",
    "\n",
    "# Set y-axis to a log scale\n",
    "ax.set_yscale('log')\n",
    "\n",
    "# Set labels and title\n",
    "ax.set_xlabel('$x$', fontsize = 17)\n",
    "ax.set_ylabel('$P(x)$', fontsize = 17)\n",
    "\n",
    "# Show a legend\n",
    "ax.legend()\n",
    "\n",
    "# Comparison between the classial and VQSVD CDFs\n",
    "plt.figure(dpi = 150)\n",
    "plt.xlabel('x')\n",
    "plt.ylabel('CDF(x)')\n",
    "\n",
    "plt.plot(x, cum_classical, 'r', label = \"Exact\")\n",
    "\n",
    "plt.plot(x, cum_quantum, 'b--', label = \" QPE\")\n",
    "\n",
    "plt.legend()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
